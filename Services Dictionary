{
        "get_loggers": {
                "elementType": "service",
                "name": "get_loggers",
                "type": "roscpp/GetLoggers",
                "args": "",
                "nodes": {
                        "averaging_server": {
                                "elementType": "node",
                                "name": "averaging_server",
                                "package": "actionlib_tutorials"
                        },
                        "averaging_client": {
                                "elementType": "node",
                                "name": "averaging_client",
                                "package": "actionlib_tutorials"
                        },
                        "fibonacci_client": {
                                "elementType": "node",
                                "name": "fibonacci_client",
                                "package": "actionlib_tutorials"
                        },
                        "unspawner": {
                                "elementType": "node",
                                "name": "unspawner",
                                "package": "controller_manager"
                        },
                        "aggregator_node": {
                                "elementType": "node",
                                "name": "aggregator_node",
                                "package": "diagnostic_aggregator"
                        },
                        "add_analyzers": {
                                "elementType": "node",
                                "name": "add_analyzers",
                                "package": "diagnostic_aggregator"
                        },
                        "hokuyo_node": {
                                "elementType": "node",
                                "name": "hokuyo_node",
                                "package": "gazebo_plugins"
                        },
                        "camera_synchronizer": {
                                "elementType": "node",
                                "name": "camera_synchronizer",
                                "package": "gazebo_plugins"
                        },
                        "gzclient": {
                                "elementType": "node",
                                "name": "gzclient",
                                "package": "gazebo_ros"
                        },
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        },
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        },
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        },
                        "stereo_view": {
                                "elementType": "node",
                                "name": "stereo_view",
                                "package": "image_view"
                        },
                        "image_saver": {
                                "elementType": "node",
                                "name": "image_saver",
                                "package": "image_view"
                        },
                        "extract_images": {
                                "elementType": "node",
                                "name": "extract_images",
                                "package": "image_view"
                        },
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        },
                        "video_recorder": {
                                "elementType": "node",
                                "name": "video_recorder",
                                "package": "image_view"
                        },
                        "disparity_view": {
                                "elementType": "node",
                                "name": "disparity_view",
                                "package": "image_view"
                        },
                        "pong": {
                                "elementType": "node",
                                "name": "pong",
                                "package": "interactive_marker_tutorials"
                        },
                        "simple_marker": {
                                "elementType": "node",
                                "name": "simple_marker",
                                "package": "interactive_marker_tutorials"
                        },
                        "selection": {
                                "elementType": "node",
                                "name": "selection",
                                "package": "interactive_marker_tutorials"
                        },
                        "point_cloud": {
                                "elementType": "node",
                                "name": "point_cloud",
                                "package": "interactive_marker_tutorials"
                        },
                        "menu": {
                                "elementType": "node",
                                "name": "menu",
                                "package": "interactive_marker_tutorials"
                        },
                        "basic_controls": {
                                "elementType": "node",
                                "name": "basic_controls",
                                "package": "interactive_marker_tutorials"
                        },
                        "cube": {
                                "elementType": "node",
                                "name": "cube",
                                "package": "interactive_marker_tutorials"
                        },
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler_srv": {
                                "elementType": "node",
                                "name": "laser_scan_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "merge_clouds": {
                                "elementType": "node",
                                "name": "merge_clouds",
                                "package": "laser_assembler"
                        },
                        "point_cloud_assembler_srv": {
                                "elementType": "node",
                                "name": "point_cloud_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        },
                        "generic_laser_filter_node": {
                                "elementType": "node",
                                "name": "generic_laser_filter_node",
                                "package": "laser_filters"
                        },
                        "scan_to_cloud_filter_chain": {
                                "elementType": "node",
                                "name": "scan_to_cloud_filter_chain",
                                "package": "laser_filters"
                        },
                        "scan_to_scan_filter_chain": {
                                "elementType": "node",
                                "name": "scan_to_scan_filter_chain",
                                "package": "laser_filters"
                        },
                        "myviz": {
                                "elementType": "node",
                                "name": "myviz",
                                "package": "librviz_tutorial"
                        },
                        "pointcloud_to_pcd": {
                                "elementType": "node",
                                "name": "pointcloud_to_pcd",
                                "package": "pcl_ros"
                        },
                        "convert_pointcloud_to_image": {
                                "elementType": "node",
                                "name": "convert_pointcloud_to_image",
                                "package": "pcl_ros"
                        },
                        "listener_class": {
                                "elementType": "node",
                                "name": "listener_class",
                                "package": "roscpp_tutorials"
                        },
                        "listener_async_spin": {
                                "elementType": "node",
                                "name": "listener_async_spin",
                                "package": "roscpp_tutorials"
                        },
                        "listener_unreliable": {
                                "elementType": "node",
                                "name": "listener_unreliable",
                                "package": "roscpp_tutorials"
                        },
                        "listener_threaded_spin": {
                                "elementType": "node",
                                "name": "listener_threaded_spin",
                                "package": "roscpp_tutorials"
                        },
                        "listener_with_tracked_object": {
                                "elementType": "node",
                                "name": "listener_with_tracked_object",
                                "package": "roscpp_tutorials"
                        },
                        "custom_callback_processing": {
                                "elementType": "node",
                                "name": "custom_callback_processing",
                                "package": "roscpp_tutorials"
                        },
                        "add_two_ints_server": {
                                "elementType": "node",
                                "name": "add_two_ints_server",
                                "package": "roscpp_tutorials"
                        },
                        "talker": {
                                "elementType": "node",
                                "name": "talker",
                                "package": "roscpp_tutorials"
                        },
                        "listener_with_userdata": {
                                "elementType": "node",
                                "name": "listener_with_userdata",
                                "package": "roscpp_tutorials"
                        },
                        "babbler": {
                                "elementType": "node",
                                "name": "babbler",
                                "package": "roscpp_tutorials"
                        },
                        "listener": {
                                "elementType": "node",
                                "name": "listener",
                                "package": "roscpp_tutorials"
                        },
                        "listener_multiple": {
                                "elementType": "node",
                                "name": "listener_multiple",
                                "package": "roscpp_tutorials"
                        },
                        "add_two_ints_server_class": {
                                "elementType": "node",
                                "name": "add_two_ints_server_class",
                                "package": "roscpp_tutorials"
                        },
                        "anonymous_listener": {
                                "elementType": "node",
                                "name": "anonymous_listener",
                                "package": "roscpp_tutorials"
                        },
                        "notify_connect": {
                                "elementType": "node",
                                "name": "notify_connect",
                                "package": "roscpp_tutorials"
                        },
                        "timers": {
                                "elementType": "node",
                                "name": "timers",
                                "package": "roscpp_tutorials"
                        },
                        "rosout": {
                                "elementType": "node",
                                "name": "rosout",
                                "package": "rosout"
                        },
                        "rqt_console": {
                                "elementType": "node",
                                "name": "rqt_console",
                                "package": "rqt_console"
                        },
                        "rviz": {
                                "elementType": "node",
                                "name": "rviz",
                                "package": "rviz"
                        },
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        },
                        "tf_empty_listener": {
                                "elementType": "node",
                                "name": "tf_empty_listener",
                                "package": "tf"
                        },
                        "tf_monitor": {
                                "elementType": "node",
                                "name": "tf_monitor",
                                "package": "tf"
                        },
                        "tf_remap": {
                                "elementType": "node",
                                "name": "tf_remap",
                                "package": "tf"
                        },
                        "view_frames": {
                                "elementType": "node",
                                "name": "view_frames",
                                "package": "tf"
                        },
                        "tf_change_notifier": {
                                "elementType": "node",
                                "name": "tf_change_notifier",
                                "package": "tf"
                        },
                        "buffer_server": {
                                "elementType": "node",
                                "name": "buffer_server",
                                "package": "tf2_ros"
                        },
                        "shape_client": {
                                "elementType": "node",
                                "name": "shape_client",
                                "package": "turtle_actionlib"
                        },
                        "shape_server": {
                                "elementType": "node",
                                "name": "shape_server",
                                "package": "turtle_actionlib"
                        },
                        "turtle_tf_listener_debug": {
                                "elementType": "node",
                                "name": "turtle_tf_listener_debug",
                                "package": "turtle_tf"
                        },
                        "turtle_tf_listener": {
                                "elementType": "node",
                                "name": "turtle_tf_listener",
                                "package": "turtle_tf"
                        },
                        "turtle_tf_message_filter": {
                                "elementType": "node",
                                "name": "turtle_tf_message_filter",
                                "package": "turtle_tf"
                        },
                        "turtle_tf2_listener": {
                                "elementType": "node",
                                "name": "turtle_tf2_listener",
                                "package": "turtle_tf2"
                        },
                        "draw_square": {
                                "elementType": "node",
                                "name": "draw_square",
                                "package": "turtlesim"
                        },
                        "mimic": {
                                "elementType": "node",
                                "name": "mimic",
                                "package": "turtlesim"
                        },
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        },
                        "turtle_teleop_key": {
                                "elementType": "node",
                                "name": "turtle_teleop_key",
                                "package": "turtlesim"
                        },
                        "points_and_lines": {
                                "elementType": "node",
                                "name": "points_and_lines",
                                "package": "visualization_marker_tutorials"
                        },
                        "basic_shapes": {
                                "elementType": "node",
                                "name": "basic_shapes",
                                "package": "visualization_marker_tutorials"
                        }
                }
        },
        "set_logger_level": {
                "elementType": "service",
                "name": "set_logger_level",
                "type": "roscpp/SetLoggerLevel",
                "args": "logger level",
                "nodes": {
                        "averaging_server": {
                                "elementType": "node",
                                "name": "averaging_server",
                                "package": "actionlib_tutorials"
                        },
                        "averaging_client": {
                                "elementType": "node",
                                "name": "averaging_client",
                                "package": "actionlib_tutorials"
                        },
                        "fibonacci_client": {
                                "elementType": "node",
                                "name": "fibonacci_client",
                                "package": "actionlib_tutorials"
                        },
                        "unspawner": {
                                "elementType": "node",
                                "name": "unspawner",
                                "package": "controller_manager"
                        },
                        "aggregator_node": {
                                "elementType": "node",
                                "name": "aggregator_node",
                                "package": "diagnostic_aggregator"
                        },
                        "add_analyzers": {
                                "elementType": "node",
                                "name": "add_analyzers",
                                "package": "diagnostic_aggregator"
                        },
                        "hokuyo_node": {
                                "elementType": "node",
                                "name": "hokuyo_node",
                                "package": "gazebo_plugins"
                        },
                        "camera_synchronizer": {
                                "elementType": "node",
                                "name": "camera_synchronizer",
                                "package": "gazebo_plugins"
                        },
                        "gzclient": {
                                "elementType": "node",
                                "name": "gzclient",
                                "package": "gazebo_ros"
                        },
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        },
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        },
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        },
                        "stereo_view": {
                                "elementType": "node",
                                "name": "stereo_view",
                                "package": "image_view"
                        },
                        "image_saver": {
                                "elementType": "node",
                                "name": "image_saver",
                                "package": "image_view"
                        },
                        "extract_images": {
                                "elementType": "node",
                                "name": "extract_images",
                                "package": "image_view"
                        },
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        },
                        "video_recorder": {
                                "elementType": "node",
                                "name": "video_recorder",
                                "package": "image_view"
                        },
                        "disparity_view": {
                                "elementType": "node",
                                "name": "disparity_view",
                                "package": "image_view"
                        },
                        "pong": {
                                "elementType": "node",
                                "name": "pong",
                                "package": "interactive_marker_tutorials"
                        },
                        "simple_marker": {
                                "elementType": "node",
                                "name": "simple_marker",
                                "package": "interactive_marker_tutorials"
                        },
                        "selection": {
                                "elementType": "node",
                                "name": "selection",
                                "package": "interactive_marker_tutorials"
                        },
                        "point_cloud": {
                                "elementType": "node",
                                "name": "point_cloud",
                                "package": "interactive_marker_tutorials"
                        },
                        "menu": {
                                "elementType": "node",
                                "name": "menu",
                                "package": "interactive_marker_tutorials"
                        },
                        "basic_controls": {
                                "elementType": "node",
                                "name": "basic_controls",
                                "package": "interactive_marker_tutorials"
                        },
                        "cube": {
                                "elementType": "node",
                                "name": "cube",
                                "package": "interactive_marker_tutorials"
                        },
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler_srv": {
                                "elementType": "node",
                                "name": "laser_scan_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "merge_clouds": {
                                "elementType": "node",
                                "name": "merge_clouds",
                                "package": "laser_assembler"
                        },
                        "point_cloud_assembler_srv": {
                                "elementType": "node",
                                "name": "point_cloud_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        },
                        "generic_laser_filter_node": {
                                "elementType": "node",
                                "name": "generic_laser_filter_node",
                                "package": "laser_filters"
                        },
                        "scan_to_cloud_filter_chain": {
                                "elementType": "node",
                                "name": "scan_to_cloud_filter_chain",
                                "package": "laser_filters"
                        },
                        "scan_to_scan_filter_chain": {
                                "elementType": "node",
                                "name": "scan_to_scan_filter_chain",
                                "package": "laser_filters"
                        },
                        "myviz": {
                                "elementType": "node",
                                "name": "myviz",
                                "package": "librviz_tutorial"
                        },
                        "pointcloud_to_pcd": {
                                "elementType": "node",
                                "name": "pointcloud_to_pcd",
                                "package": "pcl_ros"
                        },
                        "convert_pointcloud_to_image": {
                                "elementType": "node",
                                "name": "convert_pointcloud_to_image",
                                "package": "pcl_ros"
                        },
                        "listener_class": {
                                "elementType": "node",
                                "name": "listener_class",
                                "package": "roscpp_tutorials"
                        },
                        "listener_async_spin": {
                                "elementType": "node",
                                "name": "listener_async_spin",
                                "package": "roscpp_tutorials"
                        },
                        "listener_unreliable": {
                                "elementType": "node",
                                "name": "listener_unreliable",
                                "package": "roscpp_tutorials"
                        },
                        "listener_threaded_spin": {
                                "elementType": "node",
                                "name": "listener_threaded_spin",
                                "package": "roscpp_tutorials"
                        },
                        "listener_with_tracked_object": {
                                "elementType": "node",
                                "name": "listener_with_tracked_object",
                                "package": "roscpp_tutorials"
                        },
                        "custom_callback_processing": {
                                "elementType": "node",
                                "name": "custom_callback_processing",
                                "package": "roscpp_tutorials"
                        },
                        "add_two_ints_server": {
                                "elementType": "node",
                                "name": "add_two_ints_server",
                                "package": "roscpp_tutorials"
                        },
                        "talker": {
                                "elementType": "node",
                                "name": "talker",
                                "package": "roscpp_tutorials"
                        },
                        "listener_with_userdata": {
                                "elementType": "node",
                                "name": "listener_with_userdata",
                                "package": "roscpp_tutorials"
                        },
                        "babbler": {
                                "elementType": "node",
                                "name": "babbler",
                                "package": "roscpp_tutorials"
                        },
                        "listener": {
                                "elementType": "node",
                                "name": "listener",
                                "package": "roscpp_tutorials"
                        },
                        "listener_multiple": {
                                "elementType": "node",
                                "name": "listener_multiple",
                                "package": "roscpp_tutorials"
                        },
                        "add_two_ints_server_class": {
                                "elementType": "node",
                                "name": "add_two_ints_server_class",
                                "package": "roscpp_tutorials"
                        },
                        "anonymous_listener": {
                                "elementType": "node",
                                "name": "anonymous_listener",
                                "package": "roscpp_tutorials"
                        },
                        "notify_connect": {
                                "elementType": "node",
                                "name": "notify_connect",
                                "package": "roscpp_tutorials"
                        },
                        "timers": {
                                "elementType": "node",
                                "name": "timers",
                                "package": "roscpp_tutorials"
                        },
                        "rosout": {
                                "elementType": "node",
                                "name": "rosout",
                                "package": "rosout"
                        },
                        "rqt_console": {
                                "elementType": "node",
                                "name": "rqt_console",
                                "package": "rqt_console"
                        },
                        "rviz": {
                                "elementType": "node",
                                "name": "rviz",
                                "package": "rviz"
                        },
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        },
                        "tf_empty_listener": {
                                "elementType": "node",
                                "name": "tf_empty_listener",
                                "package": "tf"
                        },
                        "tf_monitor": {
                                "elementType": "node",
                                "name": "tf_monitor",
                                "package": "tf"
                        },
                        "tf_remap": {
                                "elementType": "node",
                                "name": "tf_remap",
                                "package": "tf"
                        },
                        "view_frames": {
                                "elementType": "node",
                                "name": "view_frames",
                                "package": "tf"
                        },
                        "tf_change_notifier": {
                                "elementType": "node",
                                "name": "tf_change_notifier",
                                "package": "tf"
                        },
                        "buffer_server": {
                                "elementType": "node",
                                "name": "buffer_server",
                                "package": "tf2_ros"
                        },
                        "shape_client": {
                                "elementType": "node",
                                "name": "shape_client",
                                "package": "turtle_actionlib"
                        },
                        "shape_server": {
                                "elementType": "node",
                                "name": "shape_server",
                                "package": "turtle_actionlib"
                        },
                        "turtle_tf_listener_debug": {
                                "elementType": "node",
                                "name": "turtle_tf_listener_debug",
                                "package": "turtle_tf"
                        },
                        "turtle_tf_listener": {
                                "elementType": "node",
                                "name": "turtle_tf_listener",
                                "package": "turtle_tf"
                        },
                        "turtle_tf_message_filter": {
                                "elementType": "node",
                                "name": "turtle_tf_message_filter",
                                "package": "turtle_tf"
                        },
                        "turtle_tf2_listener": {
                                "elementType": "node",
                                "name": "turtle_tf2_listener",
                                "package": "turtle_tf2"
                        },
                        "draw_square": {
                                "elementType": "node",
                                "name": "draw_square",
                                "package": "turtlesim"
                        },
                        "mimic": {
                                "elementType": "node",
                                "name": "mimic",
                                "package": "turtlesim"
                        },
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        },
                        "turtle_teleop_key": {
                                "elementType": "node",
                                "name": "turtle_teleop_key",
                                "package": "turtlesim"
                        },
                        "points_and_lines": {
                                "elementType": "node",
                                "name": "points_and_lines",
                                "package": "visualization_marker_tutorials"
                        },
                        "basic_shapes": {
                                "elementType": "node",
                                "name": "basic_shapes",
                                "package": "visualization_marker_tutorials"
                        }
                }
        },
        "add_diagnostics": {
                "elementType": "service",
                "name": "add_diagnostics",
                "type": "diagnostic_msgs/AddDiagnostics",
                "args": "load_namespace",
                "nodes": {
                        "aggregator_node": {
                                "elementType": "node",
                                "name": "aggregator_node",
                                "package": "diagnostic_aggregator"
                        }
                }
        },
        "set_parameters": {
                "elementType": "service",
                "name": "set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "hokuyo_node": {
                                "elementType": "node",
                                "name": "hokuyo_node",
                                "package": "gazebo_plugins"
                        },
                        "camera_synchronizer": {
                                "elementType": "node",
                                "name": "camera_synchronizer",
                                "package": "gazebo_plugins"
                        },
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        },
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        },
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        },
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        },
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "apply_body_wrench": {
                "elementType": "service",
                "name": "apply_body_wrench",
                "type": "gazebo_msgs/ApplyBodyWrench",
                "args": "body_name reference_frame reference_point wrench start_time duration",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "apply_joint_effort": {
                "elementType": "service",
                "name": "apply_joint_effort",
                "type": "gazebo_msgs/ApplyJointEffort",
                "args": "joint_name effort start_time duration",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "clear_body_wrenches": {
                "elementType": "service",
                "name": "clear_body_wrenches",
                "type": "gazebo_msgs/BodyRequest",
                "args": "body_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "clear_joint_forces": {
                "elementType": "service",
                "name": "clear_joint_forces",
                "type": "gazebo_msgs/JointRequest",
                "args": "joint_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "delete_light": {
                "elementType": "service",
                "name": "delete_light",
                "type": "gazebo_msgs/DeleteLight",
                "args": "light_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "delete_model": {
                "elementType": "service",
                "name": "delete_model",
                "type": "gazebo_msgs/DeleteModel",
                "args": "model_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_joint_properties": {
                "elementType": "service",
                "name": "get_joint_properties",
                "type": "gazebo_msgs/GetJointProperties",
                "args": "joint_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_light_properties": {
                "elementType": "service",
                "name": "get_light_properties",
                "type": "gazebo_msgs/GetLightProperties",
                "args": "light_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_link_properties": {
                "elementType": "service",
                "name": "get_link_properties",
                "type": "gazebo_msgs/GetLinkProperties",
                "args": "link_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_link_state": {
                "elementType": "service",
                "name": "get_link_state",
                "type": "gazebo_msgs/GetLinkState",
                "args": "link_name reference_frame",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_model_properties": {
                "elementType": "service",
                "name": "get_model_properties",
                "type": "gazebo_msgs/GetModelProperties",
                "args": "model_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_model_state": {
                "elementType": "service",
                "name": "get_model_state",
                "type": "gazebo_msgs/GetModelState",
                "args": "model_name relative_entity_name",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_physics_properties": {
                "elementType": "service",
                "name": "get_physics_properties",
                "type": "gazebo_msgs/GetPhysicsProperties",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "get_world_properties": {
                "elementType": "service",
                "name": "get_world_properties",
                "type": "gazebo_msgs/GetWorldProperties",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "pause_physics": {
                "elementType": "service",
                "name": "pause_physics",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "reset_simulation": {
                "elementType": "service",
                "name": "reset_simulation",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "reset_world": {
                "elementType": "service",
                "name": "reset_world",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_joint_properties": {
                "elementType": "service",
                "name": "set_joint_properties",
                "type": "gazebo_msgs/SetJointProperties",
                "args": "joint_name ode_joint_config",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_light_properties": {
                "elementType": "service",
                "name": "set_light_properties",
                "type": "gazebo_msgs/SetLightProperties",
                "args": "light_name cast_shadows diffuse specular attenuation_constant attenuation_linear attenuation_quadratic direction pose",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_link_properties": {
                "elementType": "service",
                "name": "set_link_properties",
                "type": "gazebo_msgs/SetLinkProperties",
                "args": "link_name com gravity_mode mass ixx ixy ixz iyy iyz izz",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_link_state": {
                "elementType": "service",
                "name": "set_link_state",
                "type": "gazebo_msgs/SetLinkState",
                "args": "link_state",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_model_configuration": {
                "elementType": "service",
                "name": "set_model_configuration",
                "type": "gazebo_msgs/SetModelConfiguration",
                "args": "model_name urdf_param_name joint_names joint_positions",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_model_state": {
                "elementType": "service",
                "name": "set_model_state",
                "type": "gazebo_msgs/SetModelState",
                "args": "model_state",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "set_physics_properties": {
                "elementType": "service",
                "name": "set_physics_properties",
                "type": "gazebo_msgs/SetPhysicsProperties",
                "args": "time_step max_update_rate gravity ode_config",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "spawn_sdf_model": {
                "elementType": "service",
                "name": "spawn_sdf_model",
                "type": "gazebo_msgs/SpawnModel",
                "args": "model_name model_xml robot_namespace initial_pose reference_frame",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "spawn_urdf_model": {
                "elementType": "service",
                "name": "spawn_urdf_model",
                "type": "gazebo_msgs/SpawnModel",
                "args": "model_name model_xml robot_namespace initial_pose reference_frame",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "unpause_physics": {
                "elementType": "service",
                "name": "unpause_physics",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "gzserver": {
                                "elementType": "node",
                                "name": "gzserver",
                                "package": "gazebo_ros"
                        }
                }
        },
        "compressed/set_parameters": {
                "elementType": "service",
                "name": "compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        }
                }
        },
        "compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        }
                }
        },
        "theora/set_parameters": {
                "elementType": "service",
                "name": "theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_proc": {
                                "elementType": "node",
                                "name": "image_proc",
                                "package": "image_proc"
                        }
                }
        },
        "image/compressed/set_parameters": {
                "elementType": "service",
                "name": "image/compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        }
                }
        },
        "image/compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "image/compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        }
                }
        },
        "image/theora/set_parameters": {
                "elementType": "service",
                "name": "image/theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "image_rotate": {
                                "elementType": "node",
                                "name": "image_rotate",
                                "package": "image_rotate"
                        }
                }
        },
        "end": {
                "elementType": "service",
                "name": "end",
                "type": "std_srvs/Trigger",
                "args": "",
                "nodes": {
                        "image_saver": {
                                "elementType": "node",
                                "name": "image_saver",
                                "package": "image_view"
                        }
                }
        },
        "save": {
                "elementType": "service",
                "name": "save",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "image_saver": {
                                "elementType": "node",
                                "name": "image_saver",
                                "package": "image_view"
                        }
                }
        },
        "start": {
                "elementType": "service",
                "name": "start",
                "type": "std_srvs/Trigger",
                "args": "",
                "nodes": {
                        "image_saver": {
                                "elementType": "node",
                                "name": "image_saver",
                                "package": "image_view"
                        }
                }
        },
        "list": {
                "elementType": "service",
                "name": "list",
                "type": "nodelet/NodeletList",
                "args": "",
                "nodes": {
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        }
                }
        },
        "load_nodelet": {
                "elementType": "service",
                "name": "load_nodelet",
                "type": "nodelet/NodeletLoad",
                "args": "name type remap_source_args remap_target_args my_argv bond_id",
                "nodes": {
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        }
                }
        },
        "unload_nodelet": {
                "elementType": "service",
                "name": "unload_nodelet",
                "type": "nodelet/NodeletUnload",
                "args": "name",
                "nodes": {
                        "image_view": {
                                "elementType": "node",
                                "name": "image_view",
                                "package": "image_view"
                        }
                }
        },
        "assemble_scans": {
                "elementType": "service",
                "name": "assemble_scans",
                "type": "laser_assembler/AssembleScans",
                "args": "begin end",
                "nodes": {
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        }
                }
        },
        "assemble_scans2": {
                "elementType": "service",
                "name": "assemble_scans2",
                "type": "laser_assembler/AssembleScans2",
                "args": "begin end",
                "nodes": {
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        }
                }
        },
        "build_cloud": {
                "elementType": "service",
                "name": "build_cloud",
                "type": "laser_assembler/AssembleScans",
                "args": "begin end",
                "nodes": {
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler_srv": {
                                "elementType": "node",
                                "name": "laser_scan_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "point_cloud_assembler_srv": {
                                "elementType": "node",
                                "name": "point_cloud_assembler_srv",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        }
                }
        },
        "build_cloud2": {
                "elementType": "service",
                "name": "build_cloud2",
                "type": "laser_assembler/AssembleScans2",
                "args": "begin end",
                "nodes": {
                        "point_cloud_assembler": {
                                "elementType": "node",
                                "name": "point_cloud_assembler",
                                "package": "laser_assembler"
                        },
                        "point_cloud2_assembler": {
                                "elementType": "node",
                                "name": "point_cloud2_assembler",
                                "package": "laser_assembler"
                        },
                        "laser_scan_assembler": {
                                "elementType": "node",
                                "name": "laser_scan_assembler",
                                "package": "laser_assembler"
                        }
                }
        },
        "add_two_ints": {
                "elementType": "service",
                "name": "add_two_ints",
                "type": "roscpp_tutorials/TwoInts",
                "args": "a b",
                "nodes": {
                        "add_two_ints_server": {
                                "elementType": "node",
                                "name": "add_two_ints_server",
                                "package": "roscpp_tutorials"
                        },
                        "add_two_ints_server_class": {
                                "elementType": "node",
                                "name": "add_two_ints_server_class",
                                "package": "roscpp_tutorials"
                        }
                }
        },
        "image_color/compressed/set_parameters": {
                "elementType": "service",
                "name": "image_color/compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_color/compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "image_color/compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_color/theora/set_parameters": {
                "elementType": "service",
                "name": "image_color/theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_mono/compressed/set_parameters": {
                "elementType": "service",
                "name": "image_mono/compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_mono/compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "image_mono/compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_mono/theora/set_parameters": {
                "elementType": "service",
                "name": "image_mono/theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect/compressed/set_parameters": {
                "elementType": "service",
                "name": "image_rect/compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect/compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "image_rect/compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect/theora/set_parameters": {
                "elementType": "service",
                "name": "image_rect/theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect_color/compressed/set_parameters": {
                "elementType": "service",
                "name": "image_rect_color/compressed/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect_color/compressedDepth/set_parameters": {
                "elementType": "service",
                "name": "image_rect_color/compressedDepth/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "image_rect_color/theora/set_parameters": {
                "elementType": "service",
                "name": "image_rect_color/theora/set_parameters",
                "type": "dynamic_reconfigure/Reconfigure",
                "args": "config",
                "nodes": {
                        "stereo_image_proc": {
                                "elementType": "node",
                                "name": "stereo_image_proc",
                                "package": "stereo_image_proc"
                        }
                }
        },
        "clear": {
                "elementType": "service",
                "name": "clear",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "kill": {
                "elementType": "service",
                "name": "kill",
                "type": "turtlesim/Kill",
                "args": "name",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "reset": {
                "elementType": "service",
                "name": "reset",
                "type": "std_srvs/Empty",
                "args": "",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "spawn": {
                "elementType": "service",
                "name": "spawn",
                "type": "turtlesim/Spawn",
                "args": "x y theta name",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "set_pen": {
                "elementType": "service",
                "name": "set_pen",
                "type": "turtlesim/SetPen",
                "args": "r g b width off",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "teleport_absolute": {
                "elementType": "service",
                "name": "teleport_absolute",
                "type": "turtlesim/TeleportAbsolute",
                "args": "x y theta",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        },
        "teleport_relative": {
                "elementType": "service",
                "name": "teleport_relative",
                "type": "turtlesim/TeleportRelative",
                "args": "linear angular",
                "nodes": {
                        "turtlesim_node": {
                                "elementType": "node",
                                "name": "turtlesim_node",
                                "package": "turtlesim"
                        }
                }
        }
}
