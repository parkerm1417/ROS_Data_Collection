import json

file = open("RTK_Kinetic_PackageDictionary_08_05_2020.json")
info = file.read()
Complete = json.loads(info)
file.close()

for pack in Complete:
    if pack != "Distribution" and pack != "Date":
        for node in Complete[pack]["nodes"]:
            try:
                Complete[pack]["nodes"][node]["services provided"]["get_loggers"]["type"] = "roscpp/GetLoggers"
                Complete[pack]["nodes"][node]["services provided"]["get_loggers"]["args"] = ""
            except:
                pass

            try:
                Complete[pack]["nodes"][node]["services provided"]["set_logger_level"]["type"] = "roscpp/SetLoggerLevel"
                Complete[pack]["nodes"][node]["services provided"]["set_logger_level"]["args"] = "logger level"
            except:
                pass

            try:
                Complete[pack]["nodes"][node]["services provided"]["set_exposure"]["type"] = "marti_sensor_msgs/SetExposure"
                Complete[pack]["nodes"][node]["services provided"]["set_exposure"]["args"] = "auto_exposure time"
            except:
                pass

            try:
                Complete[pack]["nodes"][node]["services provided"]["set_parameters"]["type"] = "dynamic_reconfigure/Reconfigure"
                Complete[pack]["nodes"][node]["services provided"]["set_parameters"]["args"] = "config"
            except:
                pass

            try:
                Complete[pack]["nodes"][node]["services provided"]["set_camera_info"]["type"] = "sensor_msgs/SetCameraInfo"
                Complete[pack]["nodes"][node]["services provided"]["set_camera_info"]["args"] = "camera_info"
            except:
                pass

file = open("RTK_Kinetic_PackageDictionary_08_05_2020.json","w")
file.write(json.dumps(Complete, indent=8))
file.close()
     
