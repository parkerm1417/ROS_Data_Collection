from os import listdir,system
import subprocess
import time
import json
from datetime import date

primitives = ["char","byte","bool","int8","uint8","int16","uint16","int32","uint32","int64","uint64","float32","float64","string","time","duration","bool[]","int8[]","uint8[]","int16[]","uint16[]","int32[]","uint32[]","int64[]","uint64[]","float32[]","float64[]","string[]","time[]","duration[]", "float64[4]", "float64[9]", "float64[12]","float64[36]"]

msglist = input("Please type all messages you would like information on. Separate messages with commas.\nMessages:")
if msglist == "ALL":
    file = subprocess.getoutput("rosmsg list")
    messages = file.split("\n")
    file = subprocess.getoutput("rossrv list")
    servs = file.split("\n")
    for srv in servs:
        messages.append(srv+"Request")
        messages.append(srv+"Response")
else:
    messages = [x for x in msglist.split(",")]

msgdic = {}

distro = subprocess.getoutput("rosversion -d")

p = 1

for msg in messages:
    Done = False
    msgdic[msg] = {
        "fields": {},
        "comments": {}
        }
    if(msg[-7:] == "Request"):
        try:
            system("rossrv info "+msg[:-7]+" > temptext.txt")
            file = open("temptext.txt")
            msginfo = file.readlines()
            file.close()
            try:
                split = msginfo.index("---\n")
                
            except:
                split = msginfo.index("---")
            for line in range(split+1,len(msginfo)):
                if(msginfo[line][0] != " " and msginfo[line] != "\n"):
                    sp = msginfo[line].find(" ")
                    msgdic[msg]["fields"][msginfo[line][sp+1:-1]] = msginfo[line][:sp]
                    if ((msginfo[line][:sp] not in primitives) and (msginfo[line][:sp] not in messages)):
                        if(msginfo[line][:sp][-1] == "]"):
                            q = msginfo[line][:sp]
                            br = q.find("[")
                            q = q[:br]
                            if (q not in messages) and (q not in primitives):
                                messages.append(q)
                        else:
                            messages.append(msginfo[line][:sp])
            bs = msg.find("/")
            try:
                file = open("/opt/ros/"+distro+"/share/"+msg[:bs]+"/srv/"+msg[bs+1:-7]+".srv")
            except:
                file = open("/opt/rtk/"+distro+"/share/"+msg[:bs]+"/srv/"+msg[bs+1:-7]+".srv")

            comments = file.readlines()
            file.close()
            c = 1
            try:
                try:
                    split = comments.index("---\n")
                except:
                    split = comments.index("---")
            except:
                split = len(comments)
            for com in range(split):
                while comments[com][0] == " ":
                    comments[com] = comments[com][1:]
                if(comments[com][-1] == "\n"):
                    msgdic[msg]["comments"][c] = comments[com][:-1]
                else:
                    msgdic[msg]["comments"][c] = comments[com]
                c += 1
            Done = True
        except:
            pass
        
    elif(msg[-8:] == "Response"):
        try:
            system("rossrv info "+msg[:-8]+" > temptext.txt")
            file = open("temptext.txt")
            msginfo = file.readlines()
            file.close()
            
            try:
                split = msginfo.index("---\n")
            except:
                split = msginfo.index("---")
            
            for line in range(split+1,len(msginfo)):
                if(msginfo[line][0] != " " and msginfo[line] != "\n"):
                    sp = msginfo[line].find(" ")
                    msgdic[msg]["fields"][msginfo[line][sp+1:-1]] = msginfo[line][:sp]
                    if ((msginfo[line][:sp] not in primitives) and (msginfo[line][:sp] not in messages)):
                        if(msginfo[line][:sp][-1] == "]"):
                            q = msginfo[line][:sp]
                            br = q.find("[")
                            q = q[:br]
                            if (q not in messages) and (q not in primitives):
                                messages.append(q)
                        else:
                            messages.append(msginfo[line][:sp])
            bs = msg.find("/")
            try:
                file = open("/opt/ros/"+distro+"/share/"+msg[:bs]+"/srv/"+msg[bs+1:-8]+".srv")
            except:
                file = open("/opt/rtk/"+distro+"/share/"+msg[:bs]+"/srv/"+msg[bs+1:-8]+".srv")
                
            comments = file.readlines()
            file.close()
            c = 1

            try:
                try:
                    split = comments.index("---\n")
                except:
                    split = comments.index("---")
            except:
                split = len(comments)
                
            for com in range(split+1,len(comments)):
                while comments[com][0] == " ":
                    comments[com] = comments[com][1:]
                if(comments[com][-1] == "\n"):
                    msgdic[msg]["comments"][c] = comments[com][:-1]
                else:
                    msgdic[msg]["comments"][c] = comments[com]
                c += 1
            Done = True
        except:
            pass
    if Done == False:
        system("rosmsg info "+msg+" > temptext.txt")
        file = open("temptext.txt")
        msginfo = file.readlines()
        file.close()
        for line in range(len(msginfo)-1):
            if(msginfo[line][0] != " " and msginfo[line] != "\n"):
                sp = msginfo[line].find(" ")
                msgdic[msg]["fields"][msginfo[line][sp+1:-1]] = msginfo[line][:sp]
                if ((msginfo[line][:sp] not in primitives) and (msginfo[line][:sp] not in messages)):
                    if(msginfo[line][:sp][-1] == "]"):
                        q = msginfo[line][:sp]
                        br = q.find("[")
                        q = q[:br]
                        if (q not in messages) and (q not in primitives):
                            messages.append(q)
                    else:
                        messages.append(msginfo[line][:sp])
        bs = msg.find("/")
        try:
            file = open("/opt/ros/"+distro+"/share/"+msg[:bs]+"/msg/"+msg[bs+1:]+".msg")
        except:
            file = open("/opt/rtk/"+distro+"/share/"+msg[:bs]+"/msg/"+msg[bs+1:]+".msg")
        comments = file.readlines()
        file.close()
        c = 1
        for com in comments:
            while com[0] == " ":
                com = com[1:]
            if(com[-1] == "\n"):
                msgdic[msg]["comments"][c] = com[:-1]
            else:
                msgdic[msg]["comments"][c] = com
            c += 1
    print("Message "+ str(p) +" of "+ str(len(messages)) +" completed")
    p += 1

filename =  distro + "_msgs_" + date.today().strftime("%m_%d_%Y") + ".txt"
filename.replace("/","_")
msgs = open(filename,"w")
msgs.write("            Message Types:\n")
for msg in msgdic:
    msgs.write("                  Message Type: "+msg+"\n")
    msgs.write("                        Fields:\n")
    for field in msgdic[msg]["fields"]:
        msgs.write("                              "+field+" : "+msgdic[msg]["fields"][field]+"\n")
    msgs.write("                        Comments:\n")
    for com in msgdic[msg]["comments"]:
        msgs.write("                              "+msgdic[msg]["comments"][com]+"\n")
msgs.close()

msgitems = msgdic.items()
msgdic = sorted(msgitems)

filename =  distro + "_msgs_" + date.today().strftime("%m_%d_%Y") + ".json"
filename.replace("/","_")
msgs = open(filename,"w")
msgs.write(json.dumps(msgdic, indent=8))
msgs.close()
