actionlib
actionlib_msgs
actionlib_tutorials
      Node: fibonacci_server
            Publications:
                  Topic: feedback
                        Message Type: actionlib_tutorials/FibonacciActionFeedback
                  Topic: result
                        Message Type: actionlib_tutorials/FibonacciActionResult
                  Topic: status
                        Message Type: actionlib_msgs/GoalStatusArray
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: fibonacci/cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: fibonacci/goal
                        Message Type: actionlib_tutorials/FibonacciActionGoal
            Services Provided:
                  Service: /fibonacci/get_loggers
                        Message: /fibonacci/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /fibonacci/get_loggers
                        Message: /fibonacci/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /fibonacci/set_logger_level
                        Message: /fibonacci/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /fibonacci/set_logger_level
                        Message: /fibonacci/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: actionlib_tutorials/FibonacciActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : actionlib_tutorials/FibonacciFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              FibonacciFeedback feedback
                  Message Type: actionlib_tutorials/FibonacciActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : actionlib_tutorials/FibonacciResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              FibonacciResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: actionlib_tutorials/FibonacciActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : actionlib_tutorials/FibonacciGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              FibonacciGoal goal
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: actionlib_tutorials/FibonacciFeedback
                        Fields:
                              sequence : int32[]
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              int32[] sequence
                              
                  Message Type: actionlib_tutorials/FibonacciResult
                        Fields:
                              sequence : int32[]
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              int32[] sequence
                  Message Type: actionlib_tutorials/FibonacciGoal
                        Fields:
                              order : int32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 order
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: averaging_server
            Publications:
                  Topic: feedback
                        Message Type: actionlib_tutorials/AveragingActionFeedback
                  Topic: result
                        Message Type: actionlib_tutorials/AveragingActionResult
                  Topic: status
                        Message Type: actionlib_msgs/GoalStatusArray
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: averaging/cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: averaging/goal
                        Message Type: actionlib_tutorials/AveragingActionGoal
                  Topic: random_number
                        Message Type: std_msgs/Float32
            Services Provided:
                  Service: /averaging/get_loggers
                        Message: /averaging/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /averaging/get_loggers
                        Message: /averaging/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /averaging/set_logger_level
                        Message: /averaging/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /averaging/set_logger_level
                        Message: /averaging/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: actionlib_tutorials/AveragingActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : actionlib_tutorials/AveragingFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              AveragingFeedback feedback
                  Message Type: actionlib_tutorials/AveragingActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : actionlib_tutorials/AveragingResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              AveragingResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: actionlib_tutorials/AveragingActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : actionlib_tutorials/AveragingGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              AveragingGoal goal
                  Message Type: std_msgs/Float32
                        Fields:
                              data : float32
                        Comments:
                              float32 dat
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: actionlib_tutorials/AveragingFeedback
                        Fields:
                              sample : int32
                              data : float32
                              mean : float32
                              std_dev : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              int32 sample
                              float32 data
                              float32 mean
                              float32 std_dev
                              
                  Message Type: actionlib_tutorials/AveragingResult
                        Fields:
                              mean : float32
                              std_dev : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              float32 mean
                              float32 std_dev
                  Message Type: actionlib_tutorials/AveragingGoal
                        Fields:
                              samples : int32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 samples
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: averaging_client
            Publications:
                  Topic: cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: goal
                        Message Type: actionlib_tutorials/AveragingActionGoal
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: averaging/feedback
                        Message Type: actionlib_tutorials/AveragingActionFeedback
                  Topic: averaging/result
                        Message Type: actionlib_tutorials/AveragingActionResult
                  Topic: averaging/status
                        Message Type: actionlib_msgs/GoalStatusArray
            Services Provided:
                  Service: /test_averaging/get_loggers
                        Message: /test_averaging/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /test_averaging/get_loggers
                        Message: /test_averaging/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /test_averaging/set_logger_level
                        Message: /test_averaging/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /test_averaging/set_logger_level
                        Message: /test_averaging/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: actionlib_tutorials/AveragingActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : actionlib_tutorials/AveragingGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              AveragingGoal goal
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: actionlib_tutorials/AveragingActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : actionlib_tutorials/AveragingFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              AveragingFeedback feedback
                  Message Type: actionlib_tutorials/AveragingActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : actionlib_tutorials/AveragingResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              AveragingResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: actionlib_tutorials/AveragingGoal
                        Fields:
                              samples : int32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 samples
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: actionlib_tutorials/AveragingFeedback
                        Fields:
                              sample : int32
                              data : float32
                              mean : float32
                              std_dev : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              int32 sample
                              float32 data
                              float32 mean
                              float32 std_dev
                              
                  Message Type: actionlib_tutorials/AveragingResult
                        Fields:
                              mean : float32
                              std_dev : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              float32 mean
                              float32 std_dev
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: fibonacci_client
            Publications:
                  Topic: cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: goal
                        Message Type: actionlib_tutorials/FibonacciActionGoal
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: fibonacci/feedback
                        Message Type: actionlib_tutorials/FibonacciActionFeedback
                  Topic: fibonacci/result
                        Message Type: actionlib_tutorials/FibonacciActionResult
                  Topic: fibonacci/status
                        Message Type: actionlib_msgs/GoalStatusArray
            Services Provided:
                  Service: /test_fibonacci/get_loggers
                        Message: /test_fibonacci/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /test_fibonacci/get_loggers
                        Message: /test_fibonacci/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /test_fibonacci/set_logger_level
                        Message: /test_fibonacci/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /test_fibonacci/set_logger_level
                        Message: /test_fibonacci/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: actionlib_tutorials/FibonacciActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : actionlib_tutorials/FibonacciGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              FibonacciGoal goal
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: actionlib_tutorials/FibonacciActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : actionlib_tutorials/FibonacciFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              FibonacciFeedback feedback
                  Message Type: actionlib_tutorials/FibonacciActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : actionlib_tutorials/FibonacciResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              FibonacciResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: actionlib_tutorials/FibonacciGoal
                        Fields:
                              order : int32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 order
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: actionlib_tutorials/FibonacciFeedback
                        Fields:
                              sequence : int32[]
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              int32[] sequence
                              
                  Message Type: actionlib_tutorials/FibonacciResult
                        Fields:
                              sequence : int32[]
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              int32[] sequence
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
angles
bond
bond_core
bondcpp
bondpy
camera_calibration
camera_calibration_parsers
      Node: convert
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
camera_info_manager
catkin
class_loader
cmake_modules
common-lisp
common_msgs
common_tutorials
compressed_depth_image_transport
compressed_image_transport
control_msgs
control_toolbox
controller_interface
controller_manager
      Node: unspawner
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: controller_group
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: spawner
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: controller_manager
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
controller_manager_msgs
cpp_common
cv_bridge
depth_image_proc
desktop
desktop_full
diagnostic_aggregator
      Node: aggregator_node
            Publications:
                  Topic: diagnostics_agg
                        Message Type: diagnostic_msgs/DiagnosticArray
                  Topic: diagnostics_toplevel_state
                        Message Type: diagnostic_msgs/DiagnosticStatus
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: diagnostics
                        Message Type: diagnostic_msgs/DiagnosticArray
            Services Provided:
                  Service: /diagnostic_aggregator/get_loggers
                        Message: /diagnostic_aggregator/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /diagnostic_aggregator/get_loggers
                        Message: /diagnostic_aggregator/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /diagnostic_aggregator/set_logger_level
                        Message: /diagnostic_aggregator/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /diagnostic_aggregator/set_logger_level
                        Message: /diagnostic_aggregator/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /diagnostics_agg/add_diagnostics
                        Message: /diagnostics_agg/add_diagnosticsRequest
                              Request Message Type: diagnostic_msgs/AddDiagnosticsRequest
                  Service: /diagnostics_agg/add_diagnostics
                        Message: /diagnostics_agg/add_diagnosticsResponse
                              Response Message Type: diagnostic_msgs/AddDiagnosticsResponse
            Message Types:
                  Message Type: diagnostic_msgs/DiagnosticArray
                        Fields:
                              header : std_msgs/Header
                              status : diagnostic_msgs/DiagnosticStatus[]
                        Comments:
                              # This message is used to send diagnostic information about the state of the robot
                              Header header #for timestamp
                              DiagnosticStatus[] status # an array of components being reported o
                  Message Type: diagnostic_msgs/DiagnosticStatus
                        Fields:
                              OK=0 : byte
                              WARN=1 : byte
                              ERROR=2 : byte
                              STALE=3 : byte
                              level : byte
                              name : string
                              message : string
                              hardware_id : string
                              values : diagnostic_msgs/KeyValue[]
                        Comments:
                              # This message holds the status of an individual component of the robot.
                              # 
                              
                              # Possible levels of operations
                              byte OK=0
                              byte WARN=1
                              byte ERROR=2
                              byte STALE=3
                              
                              byte level # level of operation enumerated above 
                              string name # a description of the test/component reporting
                              string message # a description of the status
                              string hardware_id # a hardware unique string
                              KeyValue[] values # an array of values associated with the status
                              
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: diagnostic_msgs/AddDiagnosticsRequest
                        Fields:
                              load_namespace : string
                        Comments:
                              # This service is used as part of the process for loading analyzers at runtime,
                              # and should be used by a loader script or program, not as a standalone service.
                              # Information about dynamic addition of analyzers can be found at
                              # http://wiki.ros.org/diagnostics/Tutorials/Adding%20Analyzers%20at%20Runtime
                              
                              # The load_namespace parameter defines the namespace where parameters for the
                              # initialization of analyzers in the diagnostic aggregator have been loaded. The
                              # value should be a global name (i.e. /my/name/space), not a relative
                              # (my/name/space) or private (~my/name/space) name. Analyzers will not be added
                              # if a non-global name is used. The call will also fail if the namespace
                              # contains parameters that follow a namespace structure that does not conform to
                              # that expected by the analyzer definitions. See
                              # http://wiki.ros.org/diagnostics/Tutorials/Configuring%20Diagnostic%20Aggregators
                              # and http://wiki.ros.org/diagnostics/Tutorials/Using%20the%20GenericAnalyzer
                              # for examples of the structure of yaml files which are expected to have been
                              # loaded into the namespace.
                              string load_namespace
                  Message Type: diagnostic_msgs/AddDiagnosticsResponse
                        Fields:
                              success : bool
                              message : string
                        Comments:
                              
                              # True if diagnostic aggregator was updated with new diagnostics, False
                              # otherwise. A false return value means that either there is a bond in the
                              # aggregator which already used the requested namespace, or the initialization
                              # of analyzers failed.
                              bool success
                              
                              # Message with additional information about the success or failure
                              string message
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: diagnostic_msgs/KeyValue
                        Fields:
                              key : string
                              value : string
                        Comments:
                              string key # what to label this value when viewing
                              string value # a value to track over time
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: analyzer_loader
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: add_analyzers
            Publications:
                  Topic: bond/add_analyzers
                        Message Type: bond/Status
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /add_analyzers/get_loggers
                        Message: /add_analyzers/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /add_analyzers/get_loggers
                        Message: /add_analyzers/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /add_analyzers/set_logger_level
                        Message: /add_analyzers/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /add_analyzers/set_logger_level
                        Message: /add_analyzers/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: bond/Status
                        Fields:
                              header : std_msgs/Header
                              id : string
                              instance_id : string
                              active : bool
                              heartbeat_timeout : float32
                              heartbeat_period : float32
                        Comments:
                              Header header
                              string id  # ID of the bond
                              string instance_id  # Unique ID for an individual in a bond
                              bool active
                              
                              # Including the timeouts for the bond makes it easier to debug mis-matches
                              # between the two sides.
                              float32 heartbeat_timeout
                              float32 heartbeat_perio
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
diagnostic_analysis
diagnostic_common_diagnostics
diagnostic_msgs
diagnostic_updater
diagnostics
diff_drive_controller
dynamic_reconfigure
      Node: dynparam
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: reconfigure_gui
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
eigen_conversions
executive_smach
filters
forward_command_controller
gazebo_dev
gazebo_msgs
gazebo_plugins
      Node: hokuyo_node
            Publications:
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /hokuyo_node/get_loggers
                        Message: /hokuyo_node/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /hokuyo_node/get_loggers
                        Message: /hokuyo_node/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /hokuyo_node/set_logger_level
                        Message: /hokuyo_node/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /hokuyo_node/set_logger_level
                        Message: /hokuyo_node/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /hokuyo_node/set_parameters
                        Message: /hokuyo_node/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /hokuyo_node/set_parameters
                        Message: /hokuyo_node/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
            Message Types:
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
      Node: camera_synchronizer
            Publications:
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: rising_edge_timestamps
                        Message Type: std_msgs/Header
                  Topic: projector
                        Message Type: std_msgs/Int32
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /camera_synchronizer/get_loggers
                        Message: /camera_synchronizer/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /camera_synchronizer/get_loggers
                        Message: /camera_synchronizer/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /camera_synchronizer/set_logger_level
                        Message: /camera_synchronizer/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /camera_synchronizer/set_logger_level
                        Message: /camera_synchronizer/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /camera_synchronizer/set_parameters
                        Message: /camera_synchronizer/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /camera_synchronizer/set_parameters
                        Message: /camera_synchronizer/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
            Message Types:
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: std_msgs/Int32
                        Fields:
                              data : int32
                        Comments:
                              int32 dat
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
      Node: gazebo_model
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
gazebo_ros
      Node: spawn_model
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: libcommon.sh
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: gzclient
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /gazebo/get_loggers
                        Message: /gazebo/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /gazebo/get_loggers
                        Message: /gazebo/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /gazebo/set_logger_level
                        Message: /gazebo/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /gazebo/set_logger_level
                        Message: /gazebo/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: gzserver
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: perf
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: gdbrun
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: debug
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: gazebo
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
gazebo_ros_control
gazebo_ros_pkgs
gencpp
geneus
genlisp
genmsg
gennodejs
genpy
geometry
geometry_msgs
geometry_tutorials
gl_dependency
hardware_interface
image_common
image_geometry
image_pipeline
image_proc
      Node: image_proc
            Publications:
                  Topic: image_color
                        Message Type: sensor_msgs/Image
                  Topic: compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: theora
                        Message Type: theora_image_transport/Packet
                  Topic: theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_mono
                        Message Type: sensor_msgs/Image
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect
                        Message Type: sensor_msgs/Image
                  Topic: image_rect_color
                        Message Type: sensor_msgs/Image
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /image_rect_color/compressed/set_parameters
                        Message: /image_rect_color/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_rect_color/compressed/set_parameters
                        Message: /image_rect_color/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /image_rect_color/compressedDepth/set_parameters
                        Message: /image_rect_color/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_rect_color/compressedDepth/set_parameters
                        Message: /image_rect_color/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /image_rect_color/theora/set_parameters
                        Message: /image_rect_color/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_rect_color/theora/set_parameters
                        Message: /image_rect_color/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /image_proc/get_loggers
                        Message: /image_proc/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /image_proc/get_loggers
                        Message: /image_proc/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /image_proc/set_logger_level
                        Message: /image_proc/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /image_proc/set_logger_level
                        Message: /image_proc/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /image_proc_rectify_mono/set_parameters
                        Message: /image_proc_rectify_mono/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_proc_rectify_mono/set_parameters
                        Message: /image_proc_rectify_mono/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
            Message Types:
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: sensor_msgs/CompressedImage
                        Fields:
                              header : std_msgs/Header
                              format : string
                              data : uint8[]
                        Comments:
                              # This message contains a compressed image
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                              
                              string format        # Specifies the format of the data
                                                   #   Acceptable values:
                                                   #     jpeg, png
                              uint8[] data         # Compressed image buffer
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: theora_image_transport/Packet
                        Fields:
                              header : std_msgs/Header
                              data : uint8[]
                              b_o_s : int32
                              e_o_s : int32
                              granulepos : int64
                              packetno : int64
                        Comments:
                              # ROS message adaptation of the ogg_packet struct from libogg,
                              # see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.
                              
                              Header header     # Original sensor_msgs/Image header
                              uint8[] data      # Raw Theora packet data (combines packet and bytes fields from ogg_packet)
                              int32 b_o_s       # Flag indicating whether this packet begins a logical bitstream
                              int32 e_o_s       # Flag indicating whether this packet ends a bitstream
                              int64 granulepos  # A number indicating the position of this packet in the decoded data
                              int64 packetno    # Sequential number of this packet in the ogg bitstream
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
image_publisher
      Node: image_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
image_rotate
      Node: image_rotate
            Publications:
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: image
                        Message Type: sensor_msgs/Image
                  Topic: image/compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image/compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image/compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image/compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image/compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image/compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image/theora
                        Message Type: theora_image_transport/Packet
                  Topic: image/theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image/theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
            Subscriptions:
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /image_rotate_1595353688227976733/get_loggers
                        Message: /image_rotate_1595353688227976733/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /image_rotate_1595353688227976733/get_loggers
                        Message: /image_rotate_1595353688227976733/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /image_rotate_1595353688227976733/set_logger_level
                        Message: /image_rotate_1595353688227976733/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /image_rotate_1595353688227976733/set_logger_level
                        Message: /image_rotate_1595353688227976733/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /image_rotate_1595353688227976733/set_parameters
                        Message: /image_rotate_1595353688227976733/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_rotate_1595353688227976733/set_parameters
                        Message: /image_rotate_1595353688227976733/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /rotated/image/compressed/set_parameters
                        Message: /rotated/image/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /rotated/image/compressed/set_parameters
                        Message: /rotated/image/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /rotated/image/compressedDepth/set_parameters
                        Message: /rotated/image/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /rotated/image/compressedDepth/set_parameters
                        Message: /rotated/image/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /rotated/image/theora/set_parameters
                        Message: /rotated/image/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /rotated/image/theora/set_parameters
                        Message: /rotated/image/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
            Message Types:
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: sensor_msgs/CompressedImage
                        Fields:
                              header : std_msgs/Header
                              format : string
                              data : uint8[]
                        Comments:
                              # This message contains a compressed image
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                              
                              string format        # Specifies the format of the data
                                                   #   Acceptable values:
                                                   #     jpeg, png
                              uint8[] data         # Compressed image buffer
                  Message Type: theora_image_transport/Packet
                        Fields:
                              header : std_msgs/Header
                              data : uint8[]
                              b_o_s : int32
                              e_o_s : int32
                              granulepos : int64
                              packetno : int64
                        Comments:
                              # ROS message adaptation of the ogg_packet struct from libogg,
                              # see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.
                              
                              Header header     # Original sensor_msgs/Image header
                              uint8[] data      # Raw Theora packet data (combines packet and bytes fields from ogg_packet)
                              int32 b_o_s       # Flag indicating whether this packet begins a logical bitstream
                              int32 e_o_s       # Flag indicating whether this packet ends a bitstream
                              int64 granulepos  # A number indicating the position of this packet in the decoded data
                              int64 packetno    # Sequential number of this packet in the ogg bitstream
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
image_transport
      Node: list_transports
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: republish
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
image_transport_plugins
image_view
      Node: stereo_view
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: stereo/disparity
                        Message Type: stereo_msgs/DisparityImage
                  Topic: stereo/left/image
                        Message Type: sensor_msgs/Image
                  Topic: stereo/right/image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /stereo_view_1595353719242413112/get_loggers
                        Message: /stereo_view_1595353719242413112/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /stereo_view_1595353719242413112/get_loggers
                        Message: /stereo_view_1595353719242413112/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /stereo_view_1595353719242413112/set_logger_level
                        Message: /stereo_view_1595353719242413112/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /stereo_view_1595353719242413112/set_logger_level
                        Message: /stereo_view_1595353719242413112/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: stereo_msgs/DisparityImage
                        Fields:
                              header : std_msgs/Header
                              image : sensor_msgs/Image
                              f : float32
                              T : float32
                              valid_window : sensor_msgs/RegionOfInterest
                              min_disparity : float32
                              max_disparity : float32
                              delta_d : float32
                        Comments:
                              # Separate header for compatibility with current TimeSynchronizer.
                              # Likely to be removed in a later release, use image.header instead.
                              Header header
                              
                              # Floating point disparity image. The disparities are pre-adjusted for any
                              # x-offset between the principal points of the two cameras (in the case
                              # that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)
                              sensor_msgs/Image image
                              
                              # Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.
                              float32 f # Focal length, pixels
                              float32 T # Baseline, world units
                              
                              # Subwindow of (potentially) valid disparity values.
                              sensor_msgs/RegionOfInterest valid_window
                              
                              # The range of disparities searched.
                              # In the disparity image, any disparity less than min_disparity is invalid.
                              # The disparity search range defines the horopter, or 3D volume that the
                              # stereo algorithm can "see". Points with Z outside of:
                              #     Z_min = fT / max_disparity
                              #     Z_max = fT / min_disparity
                              # could not be found.
                              float32 min_disparity
                              float32 max_disparity
                              
                              # Smallest allowed disparity increment. The smallest achievable depth range
                              # resolution is delta_Z = (Z^2/fT)*delta_d.
                              float32 delta_d
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/RegionOfInterest
                        Fields:
                              x_offset : uint32
                              y_offset : uint32
                              height : uint32
                              width : uint32
                              do_rectify : bool
                        Comments:
                              # This message is used to specify a region of interest within an image.
                              #
                              # When used to specify the ROI setting of the camera when the image was
                              # taken, the height and width fields should either match the height and
                              # width fields for the associated image; or height = width = 0
                              # indicates that the full resolution image was captured.
                              
                              uint32 x_offset  # Leftmost pixel of the ROI
                                               # (0 if the ROI includes the left edge of the image)
                              uint32 y_offset  # Topmost pixel of the ROI
                                               # (0 if the ROI includes the top edge of the image)
                              uint32 height    # Height of ROI
                              uint32 width     # Width of ROI
                              
                              # True if a distinct rectified ROI should be calculated from the "raw"
                              # ROI in this message. Typically this should be False if the full image
                              # is captured (ROI not used), and True if a subwindow is captured (ROI
                              # used).
                              bool do_rectify
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: image_saver
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: camera_info
                        Message Type: sensor_msgs/CameraInfo
                  Topic: image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /image_saver_1595353727803860237/end
                        Message: /image_saver_1595353727803860237/endRequest
                              Request Message Type: std_srvs/TriggerRequest
                  Service: /image_saver_1595353727803860237/end
                        Message: /image_saver_1595353727803860237/endResponse
                              Response Message Type: std_srvs/TriggerResponse
                  Service: /image_saver_1595353727803860237/get_loggers
                        Message: /image_saver_1595353727803860237/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /image_saver_1595353727803860237/get_loggers
                        Message: /image_saver_1595353727803860237/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /image_saver_1595353727803860237/save
                        Message: /image_saver_1595353727803860237/saveRequest
                              Request Message Type: std_srvs/EmptyRequest
                  Service: /image_saver_1595353727803860237/save
                        Message: /image_saver_1595353727803860237/saveResponse
                              Response Message Type: std_srvs/EmptyResponse
                  Service: /image_saver_1595353727803860237/set_logger_level
                        Message: /image_saver_1595353727803860237/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /image_saver_1595353727803860237/set_logger_level
                        Message: /image_saver_1595353727803860237/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /image_saver_1595353727803860237/start
                        Message: /image_saver_1595353727803860237/startRequest
                              Request Message Type: std_srvs/TriggerRequest
                  Service: /image_saver_1595353727803860237/start
                        Message: /image_saver_1595353727803860237/startResponse
                              Response Message Type: std_srvs/TriggerResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/CameraInfo
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              distortion_model : string
                              D : float64[]
                              K : float64[9]
                              R : float64[9]
                              P : float64[12]
                              binning_x : uint32
                              binning_y : uint32
                              roi : sensor_msgs/RegionOfInterest
                        Comments:
                              # This message defines meta information for a camera. It should be in a
                              # camera namespace on topic "camera_info" and accompanied by up to five
                              # image topics named:
                              #
                              #   image_raw - raw data from the camera driver, possibly Bayer encoded
                              #   image            - monochrome, distorted
                              #   image_color      - color, distorted
                              #   image_rect       - monochrome, rectified
                              #   image_rect_color - color, rectified
                              #
                              # The image_pipeline contains packages (image_proc, stereo_image_proc)
                              # for producing the four processed image topics from image_raw and
                              # camera_info. The meaning of the camera parameters are described in
                              # detail at http://www.ros.org/wiki/image_pipeline/CameraInfo.
                              #
                              # The image_geometry package provides a user-friendly interface to
                              # common operations using this meta information. If you want to, e.g.,
                              # project a 3d point into image coordinates, we strongly recommend
                              # using image_geometry.
                              #
                              # If the camera is uncalibrated, the matrices D, K, R, P should be left
                              # zeroed out. In particular, clients may assume that K[0] == 0.0
                              # indicates an uncalibrated camera.
                              
                              #######################################################################
                              #                     Image acquisition info                          #
                              #######################################################################
                              
                              # Time of image acquisition, camera coordinate frame ID
                              Header header    # Header timestamp should be acquisition time of image
                                               # Header frame_id should be optical frame of camera
                                               # origin of frame should be optical center of camera
                                               # +x should point to the right in the image
                                               # +y should point down in the image
                                               # +z should point into the plane of the image
                              
                              
                              #######################################################################
                              #                      Calibration Parameters                         #
                              #######################################################################
                              # These are fixed during camera calibration. Their values will be the #
                              # same in all messages until the camera is recalibrated. Note that    #
                              # self-calibrating systems may "recalibrate" frequently.              #
                              #                                                                     #
                              # The internal parameters can be used to warp a raw (distorted) image #
                              # to:                                                                 #
                              #   1. An undistorted image (requires D and K)                        #
                              #   2. A rectified image (requires D, K, R)                           #
                              # The projection matrix P projects 3D points into the rectified image.#
                              #######################################################################
                              
                              # The image dimensions with which the camera was calibrated. Normally
                              # this will be the full camera resolution in pixels.
                              uint32 height
                              uint32 width
                              
                              # The distortion model used. Supported models are listed in
                              # sensor_msgs/distortion_models.h. For most cameras, "plumb_bob" - a
                              # simple model of radial and tangential distortion - is sufficient.
                              string distortion_model
                              
                              # The distortion parameters, size depending on the distortion model.
                              # For "plumb_bob", the 5 parameters are: (k1, k2, t1, t2, k3).
                              float64[] D
                              
                              # Intrinsic camera matrix for the raw (distorted) images.
                              #     [fx  0 cx]
                              # K = [ 0 fy cy]
                              #     [ 0  0  1]
                              # Projects 3D points in the camera coordinate frame to 2D pixel
                              # coordinates using the focal lengths (fx, fy) and principal point
                              # (cx, cy).
                              float64[9]  K # 3x3 row-major matrix
                              
                              # Rectification matrix (stereo cameras only)
                              # A rotation matrix aligning the camera coordinate system to the ideal
                              # stereo image plane so that epipolar lines in both stereo images are
                              # parallel.
                              float64[9]  R # 3x3 row-major matrix
                              
                              # Projection/camera matrix
                              #     [fx'  0  cx' Tx]
                              # P = [ 0  fy' cy' Ty]
                              #     [ 0   0   1   0]
                              # By convention, this matrix specifies the intrinsic (camera) matrix
                              #  of the processed (rectified) image. That is, the left 3x3 portion
                              #  is the normal camera intrinsic matrix for the rectified image.
                              # It projects 3D points in the camera coordinate frame to 2D pixel
                              #  coordinates using the focal lengths (fx', fy') and principal point
                              #  (cx', cy') - these may differ from the values in K.
                              # For monocular cameras, Tx = Ty = 0. Normally, monocular cameras will
                              #  also have R = the identity and P[1:3,1:3] = K.
                              # For a stereo pair, the fourth column [Tx Ty 0]' is related to the
                              #  position of the optical center of the second camera in the first
                              #  camera's frame. We assume Tz = 0 so both cameras are in the same
                              #  stereo image plane. The first camera always has Tx = Ty = 0. For
                              #  the right (second) camera of a horizontal stereo pair, Ty = 0 and
                              #  Tx = -fx' * B, where B is the baseline between the cameras.
                              # Given a 3D point [X Y Z]', the projection (x, y) of the point onto
                              #  the rectified image is given by:
                              #  [u v w]' = P * [X Y Z 1]'
                              #         x = u / w
                              #         y = v / w
                              #  This holds for both images of a stereo pair.
                              float64[12] P # 3x4 row-major matrix
                              
                              
                              #######################################################################
                              #                      Operational Parameters                         #
                              #######################################################################
                              # These define the image region actually captured by the camera       #
                              # driver. Although they affect the geometry of the output image, they #
                              # may be changed freely without recalibrating the camera.             #
                              #######################################################################
                              
                              # Binning refers here to any camera setting which combines rectangular
                              #  neighborhoods of pixels into larger "super-pixels." It reduces the
                              #  resolution of the output image to
                              #  (width / binning_x) x (height / binning_y).
                              # The default values binning_x = binning_y = 0 is considered the same
                              #  as binning_x = binning_y = 1 (no subsampling).
                              uint32 binning_x
                              uint32 binning_y
                              
                              # Region of interest (subwindow of full camera resolution), given in
                              #  full resolution (unbinned) image coordinates. A particular ROI
                              #  always denotes the same window of pixels on the camera sensor,
                              #  regardless of binning settings.
                              # The default setting of roi (all values 0) is considered the same as
                              #  full resolution (roi.width = width, roi.height = height).
                              RegionOfInterest roi
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: std_srvs/TriggerRequest
                        Fields:
                        Comments:
                  Message Type: std_srvs/TriggerResponse
                        Fields:
                              success : bool
                              message : string
                        Comments:
                              bool success   # indicate successful run of triggered service
                              string message # informational, e.g. for error messages
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: std_srvs/EmptyRequest
                        Fields:
                        Comments:
                  Message Type: std_srvs/EmptyResponse
                        Fields:
                        Comments:
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/RegionOfInterest
                        Fields:
                              x_offset : uint32
                              y_offset : uint32
                              height : uint32
                              width : uint32
                              do_rectify : bool
                        Comments:
                              # This message is used to specify a region of interest within an image.
                              #
                              # When used to specify the ROI setting of the camera when the image was
                              # taken, the height and width fields should either match the height and
                              # width fields for the associated image; or height = width = 0
                              # indicates that the full resolution image was captured.
                              
                              uint32 x_offset  # Leftmost pixel of the ROI
                                               # (0 if the ROI includes the left edge of the image)
                              uint32 y_offset  # Topmost pixel of the ROI
                                               # (0 if the ROI includes the top edge of the image)
                              uint32 height    # Height of ROI
                              uint32 width     # Width of ROI
                              
                              # True if a distinct rectified ROI should be calculated from the "raw"
                              # ROI in this message. Typically this should be False if the full image
                              # is captured (ROI not used), and True if a subwindow is captured (ROI
                              # used).
                              bool do_rectify
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: extract_images
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /extract_images_1595353739208875733/get_loggers
                        Message: /extract_images_1595353739208875733/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /extract_images_1595353739208875733/get_loggers
                        Message: /extract_images_1595353739208875733/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /extract_images_1595353739208875733/set_logger_level
                        Message: /extract_images_1595353739208875733/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /extract_images_1595353739208875733/set_logger_level
                        Message: /extract_images_1595353739208875733/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: image_view
            Publications:
                  Topic: output
                        Message Type: sensor_msgs/Image
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /image_view/get_loggers
                        Message: /image_view/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /image_view/get_loggers
                        Message: /image_view/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /image_view/list
                        Message: /image_view/listRequest
                              Request Message Type: nodelet/NodeletListRequest
                  Service: /image_view/list
                        Message: /image_view/listResponse
                              Response Message Type: nodelet/NodeletListResponse
                  Service: /image_view/load_nodelet
                        Message: /image_view/load_nodeletRequest
                              Request Message Type: nodelet/NodeletLoadRequest
                  Service: /image_view/load_nodelet
                        Message: /image_view/load_nodeletResponse
                              Response Message Type: nodelet/NodeletLoadResponse
                  Service: /image_view/set_logger_level
                        Message: /image_view/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /image_view/set_logger_level
                        Message: /image_view/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /image_view/set_parameters
                        Message: /image_view/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /image_view/set_parameters
                        Message: /image_view/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /image_view/unload_nodelet
                        Message: /image_view/unload_nodeletRequest
                              Request Message Type: nodelet/NodeletUnloadRequest
                  Service: /image_view/unload_nodelet
                        Message: /image_view/unload_nodeletResponse
                              Response Message Type: nodelet/NodeletUnloadResponse
            Message Types:
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: nodelet/NodeletListRequest
                        Fields:
                        Comments:
                  Message Type: nodelet/NodeletListResponse
                        Fields:
                              nodelets : string[]
                        Comments:
                              string[] nodelets
                  Message Type: nodelet/NodeletLoadRequest
                        Fields:
                              name : string
                              type : string
                              remap_source_args : string[]
                              remap_target_args : string[]
                              my_argv : string[]
                              bond_id : string
                        Comments:
                              string name
                              string type
                              string[] remap_source_args
                              string[] remap_target_args
                              string[] my_argv
                              
                              string bond_id
                  Message Type: nodelet/NodeletLoadResponse
                        Fields:
                              success : bool
                        Comments:
                              bool success
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: nodelet/NodeletUnloadRequest
                        Fields:
                              name : string
                        Comments:
                              string name
                  Message Type: nodelet/NodeletUnloadResponse
                        Fields:
                              success : bool
                        Comments:
                              bool success
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
      Node: extract_images_sync
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: video_recorder
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /video_recorder_1595353756300734319/get_loggers
                        Message: /video_recorder_1595353756300734319/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /video_recorder_1595353756300734319/get_loggers
                        Message: /video_recorder_1595353756300734319/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /video_recorder_1595353756300734319/set_logger_level
                        Message: /video_recorder_1595353756300734319/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /video_recorder_1595353756300734319/set_logger_level
                        Message: /video_recorder_1595353756300734319/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: disparity_view
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: image
                        Message Type: sensor_msgs/Image
            Services Provided:
                  Service: /disparity_view_1595353761004251583/get_loggers
                        Message: /disparity_view_1595353761004251583/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /disparity_view_1595353761004251583/get_loggers
                        Message: /disparity_view_1595353761004251583/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /disparity_view_1595353761004251583/set_logger_level
                        Message: /disparity_view_1595353761004251583/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /disparity_view_1595353761004251583/set_logger_level
                        Message: /disparity_view_1595353761004251583/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
interactive_marker_tutorials
      Node: pong
            Publications:
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: pong/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /pong/get_loggers
                        Message: /pong/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /pong/get_loggers
                        Message: /pong/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /pong/set_logger_level
                        Message: /pong/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /pong/set_logger_level
                        Message: /pong/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: simple_marker
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
            Subscriptions:
                  Topic: simple_marker/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /simple_marker/get_loggers
                        Message: /simple_marker/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /simple_marker/get_loggers
                        Message: /simple_marker/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /simple_marker/set_logger_level
                        Message: /simple_marker/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /simple_marker/set_logger_level
                        Message: /simple_marker/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: selection
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
            Subscriptions:
                  Topic: selection/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /selection/get_loggers
                        Message: /selection/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /selection/get_loggers
                        Message: /selection/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /selection/set_logger_level
                        Message: /selection/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /selection/set_logger_level
                        Message: /selection/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: point_cloud
            Publications:
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: point_cloud/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /point_cloud/get_loggers
                        Message: /point_cloud/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /point_cloud/get_loggers
                        Message: /point_cloud/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /point_cloud/set_logger_level
                        Message: /point_cloud/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /point_cloud/set_logger_level
                        Message: /point_cloud/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: menu
            Publications:
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: menu/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /menu/get_loggers
                        Message: /menu/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /menu/get_loggers
                        Message: /menu/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /menu/set_logger_level
                        Message: /menu/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /menu/set_logger_level
                        Message: /menu/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: basic_controls
            Publications:
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
            Subscriptions:
                  Topic: basic_controls/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /basic_controls/get_loggers
                        Message: /basic_controls/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /basic_controls/get_loggers
                        Message: /basic_controls/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /basic_controls/set_logger_level
                        Message: /basic_controls/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /basic_controls/set_logger_level
                        Message: /basic_controls/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
      Node: cube
            Publications:
                  Topic: update
                        Message Type: visualization_msgs/InteractiveMarkerUpdate
                  Topic: update_full
                        Message Type: visualization_msgs/InteractiveMarkerInit
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: cube/feedback
                        Message Type: visualization_msgs/InteractiveMarkerFeedback
            Services Provided:
                  Service: /cube/get_loggers
                        Message: /cube/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /cube/get_loggers
                        Message: /cube/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /cube/set_logger_level
                        Message: /cube/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /cube/set_logger_level
                        Message: /cube/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: visualization_msgs/InteractiveMarkerUpdate
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              UPDATE=1 : uint8
                              server_id : string
                              seq_num : uint64
                              type : uint8
                              markers : visualization_msgs/InteractiveMarker[]
                              poses : visualization_msgs/InteractiveMarkerPose[]
                              erases : string[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed an update.
                              uint64 seq_num
                              
                              # Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.
                              # UPDATE: Incremental update to previous state. 
                              #         The sequence number must be 1 higher than for
                              #         the previous update.
                              # KEEP_ALIVE: Indicates the that the server is still living.
                              #             The sequence number does not increase.
                              #             No payload data should be filled out (markers, poses, or erases).
                              uint8 KEEP_ALIVE = 0
                              uint8 UPDATE = 1
                              
                              uint8 type
                              
                              #Note: No guarantees on the order of processing.
                              #      Contents must be kept consistent by sender.
                              
                              #Markers to be added or updated
                              InteractiveMarker[] markers
                              
                              #Poses of markers that should be moved
                              InteractiveMarkerPose[] poses
                              
                              #Names of markers to be erased
                              string[] erases
                  Message Type: visualization_msgs/InteractiveMarkerInit
                        Fields:
                              server_id : string
                              seq_num : uint64
                              markers : visualization_msgs/InteractiveMarker[]
                        Comments:
                              # Identifying string. Must be unique in the topic namespace
                              # that this server works on.
                              string server_id
                              
                              # Sequence number.
                              # The client will use this to detect if it has missed a subsequent
                              # update.  Every update message will have the same sequence number as
                              # an init message.  Clients will likely want to unsubscribe from the
                              # init topic after a successful initialization to avoid receiving
                              # duplicate data.
                              uint64 seq_num
                              
                              # All markers.
                              InteractiveMarker[] markers
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/InteractiveMarkerFeedback
                        Fields:
                              KEEP_ALIVE=0 : uint8
                              POSE_UPDATE=1 : uint8
                              MENU_SELECT=2 : uint8
                              BUTTON_CLICK=3 : uint8
                              MOUSE_DOWN=4 : uint8
                              MOUSE_UP=5 : uint8
                              header : std_msgs/Header
                              client_id : string
                              marker_name : string
                              control_name : string
                              event_type : uint8
                              pose : geometry_msgs/Pose
                              menu_entry_id : uint32
                              mouse_point : geometry_msgs/Point
                              mouse_point_valid : bool
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Identifying string. Must be unique in the topic namespace.
                              string client_id
                              
                              # Feedback message sent back from the GUI, e.g.
                              # when the status of an interactive marker was modified by the user.
                              
                              # Specifies which interactive marker and control this message refers to
                              string marker_name
                              string control_name
                              
                              # Type of the event
                              # KEEP_ALIVE: sent while dragging to keep up control of the marker
                              # MENU_SELECT: a menu entry has been selected
                              # BUTTON_CLICK: a button control has been clicked
                              # POSE_UPDATE: the pose has been changed using one of the controls
                              uint8 KEEP_ALIVE = 0
                              uint8 POSE_UPDATE = 1
                              uint8 MENU_SELECT = 2
                              uint8 BUTTON_CLICK = 3
                              
                              uint8 MOUSE_DOWN = 4
                              uint8 MOUSE_UP = 5
                              
                              uint8 event_type
                              
                              # Current pose of the marker
                              # Note: Has to be valid for all feedback types.
                              geometry_msgs/Pose pose
                              
                              # Contains the ID of the selected menu entry
                              # Only valid for MENU_SELECT events.
                              uint32 menu_entry_id
                              
                              # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
                              # may contain the 3 dimensional position of the event on the
                              # control.  If it does, mouse_point_valid will be true.  mouse_point
                              # will be relative to the frame listed in the header.
                              geometry_msgs/Point mouse_point
                              bool mouse_point_valid
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: visualization_msgs/InteractiveMarker
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                              description : string
                              scale : float32
                              menu_entries : visualization_msgs/MenuEntry[]
                              controls : visualization_msgs/InteractiveMarkerControl[]
                        Comments:
                              # Time/frame info.
                              # If header.time is set to 0, the marker will be retransformed into
                              # its frame on each timestep. You will receive the pose feedback
                              # in the same frame.
                              # Otherwise, you might receive feedback in a different frame.
                              # For rviz, this will be the current 'fixed frame' set by the user.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                              
                              # Short description (< 40 characters).
                              string description
                              
                              # Scale to be used for default controls (default=1).
                              float32 scale
                              
                              # All menu and submenu entries associated with this marker.
                              MenuEntry[] menu_entries
                              
                              # List of controls displayed for this marker.
                              InteractiveMarkerControl[] controls
                  Message Type: visualization_msgs/InteractiveMarkerPose
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                              name : string
                        Comments:
                              # Time/frame info.
                              Header header
                              
                              # Initial pose. Also, defines the pivot point for rotations.
                              geometry_msgs/Pose pose
                              
                              # Identifying string. Must be globally unique in
                              # the topic that this message is sent through.
                              string name
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: visualization_msgs/MenuEntry
                        Fields:
                              FEEDBACK=0 : uint8
                              ROSRUN=1 : uint8
                              ROSLAUNCH=2 : uint8
                              id : uint32
                              parent_id : uint32
                              title : string
                              command : string
                              command_type : uint8
                        Comments:
                              # MenuEntry message.
                              
                              # Each InteractiveMarker message has an array of MenuEntry messages.
                              # A collection of MenuEntries together describe a
                              # menu/submenu/subsubmenu/etc tree, though they are stored in a flat
                              # array.  The tree structure is represented by giving each menu entry
                              # an ID number and a "parent_id" field.  Top-level entries are the
                              # ones with parent_id = 0.  Menu entries are ordered within their
                              # level the same way they are ordered in the containing array.  Parent
                              # entries must appear before their children.
                              
                              # Example:
                              # - id = 3
                              #   parent_id = 0
                              #   title = "fun"
                              # - id = 2
                              #   parent_id = 0
                              #   title = "robot"
                              # - id = 4
                              #   parent_id = 2
                              #   title = "pr2"
                              # - id = 5
                              #   parent_id = 2
                              #   title = "turtle"
                              #
                              # Gives a menu tree like this:
                              #  - fun
                              #  - robot
                              #    - pr2
                              #    - turtle
                              
                              # ID is a number for each menu entry.  Must be unique within the
                              # control, and should never be 0.
                              uint32 id
                              
                              # ID of the parent of this menu entry, if it is a submenu.  If this
                              # menu entry is a top-level entry, set parent_id to 0.
                              uint32 parent_id
                              
                              # menu / entry title
                              string title
                              
                              # Arguments to command indicated by command_type (below)
                              string command
                              
                              # Command_type stores the type of response desired when this menu
                              # entry is clicked.
                              # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry's id.
                              # ROSRUN: execute "rosrun" with arguments given in the command field (above).
                              # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).
                              uint8 FEEDBACK=0
                              uint8 ROSRUN=1
                              uint8 ROSLAUNCH=2
                              uint8 command_type
                  Message Type: visualization_msgs/InteractiveMarkerControl
                        Fields:
                              INHERIT=0 : uint8
                              FIXED=1 : uint8
                              VIEW_FACING=2 : uint8
                              NONE=0 : uint8
                              MENU=1 : uint8
                              BUTTON=2 : uint8
                              MOVE_AXIS=3 : uint8
                              MOVE_PLANE=4 : uint8
                              ROTATE_AXIS=5 : uint8
                              MOVE_ROTATE=6 : uint8
                              MOVE_3D=7 : uint8
                              ROTATE_3D=8 : uint8
                              MOVE_ROTATE_3D=9 : uint8
                              name : string
                              orientation : geometry_msgs/Quaternion
                              orientation_mode : uint8
                              interaction_mode : uint8
                              always_visible : bool
                              markers : visualization_msgs/Marker[]
                              independent_marker_orientation : bool
                              description : string
                        Comments:
                              # Represents a control that is to be displayed together with an interactive marker
                              
                              # Identifying string for this control.
                              # You need to assign a unique value to this to receive feedback from the GUI
                              # on what actions the user performs on this control (e.g. a button click).
                              string name
                              
                              
                              # Defines the local coordinate frame (relative to the pose of the parent
                              # interactive marker) in which is being rotated and translated.
                              # Default: Identity
                              geometry_msgs/Quaternion orientation
                              
                              
                              # Orientation mode: controls how orientation changes.
                              # INHERIT: Follow orientation of interactive marker
                              # FIXED: Keep orientation fixed at initial state
                              # VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
                              uint8 INHERIT = 0 
                              uint8 FIXED = 1
                              uint8 VIEW_FACING = 2
                              
                              uint8 orientation_mode
                              
                              # Interaction mode for this control
                              # 
                              # NONE: This control is only meant for visualization; no context menu.
                              # MENU: Like NONE, but right-click menu is active.
                              # BUTTON: Element can be left-clicked.
                              # MOVE_AXIS: Translate along local x-axis.
                              # MOVE_PLANE: Translate in local y-z plane.
                              # ROTATE_AXIS: Rotate around local x-axis.
                              # MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
                              uint8 NONE = 0 
                              uint8 MENU = 1
                              uint8 BUTTON = 2
                              uint8 MOVE_AXIS = 3 
                              uint8 MOVE_PLANE = 4
                              uint8 ROTATE_AXIS = 5
                              uint8 MOVE_ROTATE = 6
                              # "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
                              # MOVE_3D: Translate freely in 3D space.
                              # ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
                              # MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
                              uint8 MOVE_3D = 7
                              uint8 ROTATE_3D = 8
                              uint8 MOVE_ROTATE_3D = 9
                              
                              uint8 interaction_mode
                              
                              
                              # If true, the contained markers will also be visible
                              # when the gui is not in interactive mode.
                              bool always_visible
                              
                              
                              # Markers to be displayed as custom visual representation.
                              # Leave this empty to use the default control handles.
                              #
                              # Note: 
                              # - The markers can be defined in an arbitrary coordinate frame,
                              #   but will be transformed into the local frame of the interactive marker.
                              # - If the header of a marker is empty, its pose will be interpreted as 
                              #   relative to the pose of the parent interactive marker.
                              Marker[] markers
                              
                              
                              # In VIEW_FACING mode, set this to true if you don't want the markers
                              # to be aligned with the camera view point. The markers will show up
                              # as in INHERIT mode.
                              bool independent_marker_orientation
                              
                              
                              # Short description (< 40 characters) of what this control does,
                              # e.g. "Move the robot". 
                              # Default: A generic description based on the interaction mode
                              string description
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
interactive_markers
joint_limits_interface
joint_state_controller
joint_state_publisher
      Node: joint_state_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
joint_state_publisher_gui
      Node: joint_state_publisher_gui
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
kdl_conversions
kdl_parser
laser_assembler
      Node: point_cloud_assembler
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: cloud
                        Message Type: sensor_msgs/PointCloud
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /assemble_scans
                        Message: /assemble_scansRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /assemble_scans
                        Message: /assemble_scansResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /assemble_scans2
                        Message: /assemble_scans2Request
                              Request Message Type: laser_assembler/AssembleScans2Request
                  Service: /assemble_scans2
                        Message: /assemble_scans2Response
                              Response Message Type: laser_assembler/AssembleScans2Response
                  Service: /build_cloud
                        Message: /build_cloudRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /build_cloud
                        Message: /build_cloudResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /build_cloud2
                        Message: /build_cloud2Request
                              Request Message Type: laser_assembler/AssembleScans2Request
                  Service: /build_cloud2
                        Message: /build_cloud2Response
                              Response Message Type: laser_assembler/AssembleScans2Response
                  Service: /point_cloud_assembler/get_loggers
                        Message: /point_cloud_assembler/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /point_cloud_assembler/get_loggers
                        Message: /point_cloud_assembler/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /point_cloud_assembler/set_logger_level
                        Message: /point_cloud_assembler/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /point_cloud_assembler/set_logger_level
                        Message: /point_cloud_assembler/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/PointCloud
                        Fields:
                              header : std_msgs/Header
                              points : geometry_msgs/Point32[]
                              channels : sensor_msgs/ChannelFloat32[]
                        Comments:
                              # This message holds a collection of 3d points, plus optional additional
                              # information about each point.
                              
                              # Time of sensor data acquisition, coordinate frame ID.
                              Header header
                              
                              # Array of 3d points. Each Point32 should be interpreted as a 3d point
                              # in the frame given in the header.
                              geometry_msgs/Point32[] points
                              
                              # Each channel should have the same number of elements as points array,
                              # and the data in each channel should correspond 1:1 with each point.
                              # Channel names in common practice are listed in ChannelFloat32.msg.
                              ChannelFloat32[] channels
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: laser_assembler/AssembleScansRequest
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScansResponse
                        Fields:
                              cloud : sensor_msgs/PointCloud
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud cloud
                  Message Type: laser_assembler/AssembleScans2Request
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScans2Response
                        Fields:
                              cloud : sensor_msgs/PointCloud2
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud2 cloud
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Point32
                        Fields:
                              x : float32
                              y : float32
                              z : float32
                        Comments:
                              # This contains the position of a point in free space(with 32 bits of precision).
                              # It is recommeded to use Point wherever possible instead of Point32.  
                              # 
                              # This recommendation is to promote interoperability.  
                              #
                              # This message is designed to take up less space when sending
                              # lots of points at once, as in the case of a PointCloud.  
                              
                              float32 x
                              float32 y
                              float32 
                  Message Type: sensor_msgs/ChannelFloat32
                        Fields:
                              name : string
                              values : float32[]
                        Comments:
                              # This message is used by the PointCloud message to hold optional data
                              # associated with each point in the cloud. The length of the values
                              # array should be the same as the length of the points array in the
                              # PointCloud, and each value should be associated with the corresponding
                              # point.
                              
                              # Channel names in existing practice include:
                              #   "u", "v" - row and column (respectively) in the left stereo image.
                              #              This is opposite to usual conventions but remains for
                              #              historical reasons. The newer PointCloud2 message has no
                              #              such problem.
                              #   "rgb" - For point clouds produced by color stereo cameras. uint8
                              #           (R,G,B) values packed into the least significant 24 bits,
                              #           in order.
                              #   "intensity" - laser or pixel intensity.
                              #   "distance"
                              
                              # The channel name should give semantics of the channel (e.g.
                              # "intensity" instead of "value").
                              string name
                              
                              # The values array should be 1-1 with the elements of the associated
                              # PointCloud.
                              float32[] values
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: point_cloud2_assembler
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: laser_scan_assembler_srv
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: scan_in
                        Message Type: sensor_msgs/LaserScan
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /laser_scan_assembler/build_cloud
                        Message: /laser_scan_assembler/build_cloudRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /laser_scan_assembler/build_cloud
                        Message: /laser_scan_assembler/build_cloudResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /laser_scan_assembler/get_loggers
                        Message: /laser_scan_assembler/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /laser_scan_assembler/get_loggers
                        Message: /laser_scan_assembler/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /laser_scan_assembler/set_logger_level
                        Message: /laser_scan_assembler/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /laser_scan_assembler/set_logger_level
                        Message: /laser_scan_assembler/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: laser_assembler/AssembleScansRequest
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScansResponse
                        Fields:
                              cloud : sensor_msgs/PointCloud
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud cloud
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: sensor_msgs/PointCloud
                        Fields:
                              header : std_msgs/Header
                              points : geometry_msgs/Point32[]
                              channels : sensor_msgs/ChannelFloat32[]
                        Comments:
                              # This message holds a collection of 3d points, plus optional additional
                              # information about each point.
                              
                              # Time of sensor data acquisition, coordinate frame ID.
                              Header header
                              
                              # Array of 3d points. Each Point32 should be interpreted as a 3d point
                              # in the frame given in the header.
                              geometry_msgs/Point32[] points
                              
                              # Each channel should have the same number of elements as points array,
                              # and the data in each channel should correspond 1:1 with each point.
                              # Channel names in common practice are listed in ChannelFloat32.msg.
                              ChannelFloat32[] channels
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Point32
                        Fields:
                              x : float32
                              y : float32
                              z : float32
                        Comments:
                              # This contains the position of a point in free space(with 32 bits of precision).
                              # It is recommeded to use Point wherever possible instead of Point32.  
                              # 
                              # This recommendation is to promote interoperability.  
                              #
                              # This message is designed to take up less space when sending
                              # lots of points at once, as in the case of a PointCloud.  
                              
                              float32 x
                              float32 y
                              float32 
                  Message Type: sensor_msgs/ChannelFloat32
                        Fields:
                              name : string
                              values : float32[]
                        Comments:
                              # This message is used by the PointCloud message to hold optional data
                              # associated with each point in the cloud. The length of the values
                              # array should be the same as the length of the points array in the
                              # PointCloud, and each value should be associated with the corresponding
                              # point.
                              
                              # Channel names in existing practice include:
                              #   "u", "v" - row and column (respectively) in the left stereo image.
                              #              This is opposite to usual conventions but remains for
                              #              historical reasons. The newer PointCloud2 message has no
                              #              such problem.
                              #   "rgb" - For point clouds produced by color stereo cameras. uint8
                              #           (R,G,B) values packed into the least significant 24 bits,
                              #           in order.
                              #   "intensity" - laser or pixel intensity.
                              #   "distance"
                              
                              # The channel name should give semantics of the channel (e.g.
                              # "intensity" instead of "value").
                              string name
                              
                              # The values array should be 1-1 with the elements of the associated
                              # PointCloud.
                              float32[] values
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: merge_clouds
            Publications:
                  Topic: cloud_out
                        Message Type: sensor_msgs/PointCloud
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: cloud_in1
                        Message Type: sensor_msgs/PointCloud
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /merge_clouds/get_loggers
                        Message: /merge_clouds/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /merge_clouds/get_loggers
                        Message: /merge_clouds/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /merge_clouds/set_logger_level
                        Message: /merge_clouds/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /merge_clouds/set_logger_level
                        Message: /merge_clouds/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: sensor_msgs/PointCloud
                        Fields:
                              header : std_msgs/Header
                              points : geometry_msgs/Point32[]
                              channels : sensor_msgs/ChannelFloat32[]
                        Comments:
                              # This message holds a collection of 3d points, plus optional additional
                              # information about each point.
                              
                              # Time of sensor data acquisition, coordinate frame ID.
                              Header header
                              
                              # Array of 3d points. Each Point32 should be interpreted as a 3d point
                              # in the frame given in the header.
                              geometry_msgs/Point32[] points
                              
                              # Each channel should have the same number of elements as points array,
                              # and the data in each channel should correspond 1:1 with each point.
                              # Channel names in common practice are listed in ChannelFloat32.msg.
                              ChannelFloat32[] channels
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Point32
                        Fields:
                              x : float32
                              y : float32
                              z : float32
                        Comments:
                              # This contains the position of a point in free space(with 32 bits of precision).
                              # It is recommeded to use Point wherever possible instead of Point32.  
                              # 
                              # This recommendation is to promote interoperability.  
                              #
                              # This message is designed to take up less space when sending
                              # lots of points at once, as in the case of a PointCloud.  
                              
                              float32 x
                              float32 y
                              float32 
                  Message Type: sensor_msgs/ChannelFloat32
                        Fields:
                              name : string
                              values : float32[]
                        Comments:
                              # This message is used by the PointCloud message to hold optional data
                              # associated with each point in the cloud. The length of the values
                              # array should be the same as the length of the points array in the
                              # PointCloud, and each value should be associated with the corresponding
                              # point.
                              
                              # Channel names in existing practice include:
                              #   "u", "v" - row and column (respectively) in the left stereo image.
                              #              This is opposite to usual conventions but remains for
                              #              historical reasons. The newer PointCloud2 message has no
                              #              such problem.
                              #   "rgb" - For point clouds produced by color stereo cameras. uint8
                              #           (R,G,B) values packed into the least significant 24 bits,
                              #           in order.
                              #   "intensity" - laser or pixel intensity.
                              #   "distance"
                              
                              # The channel name should give semantics of the channel (e.g.
                              # "intensity" instead of "value").
                              string name
                              
                              # The values array should be 1-1 with the elements of the associated
                              # PointCloud.
                              float32[] values
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: point_cloud_assembler_srv
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: scan_in
                        Message Type: sensor_msgs/LaserScan
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /point_cloud_assembler/build_cloud
                        Message: /point_cloud_assembler/build_cloudRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /point_cloud_assembler/build_cloud
                        Message: /point_cloud_assembler/build_cloudResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /point_cloud_assembler/get_loggers
                        Message: /point_cloud_assembler/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /point_cloud_assembler/get_loggers
                        Message: /point_cloud_assembler/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /point_cloud_assembler/set_logger_level
                        Message: /point_cloud_assembler/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /point_cloud_assembler/set_logger_level
                        Message: /point_cloud_assembler/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: laser_assembler/AssembleScansRequest
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScansResponse
                        Fields:
                              cloud : sensor_msgs/PointCloud
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud cloud
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: sensor_msgs/PointCloud
                        Fields:
                              header : std_msgs/Header
                              points : geometry_msgs/Point32[]
                              channels : sensor_msgs/ChannelFloat32[]
                        Comments:
                              # This message holds a collection of 3d points, plus optional additional
                              # information about each point.
                              
                              # Time of sensor data acquisition, coordinate frame ID.
                              Header header
                              
                              # Array of 3d points. Each Point32 should be interpreted as a 3d point
                              # in the frame given in the header.
                              geometry_msgs/Point32[] points
                              
                              # Each channel should have the same number of elements as points array,
                              # and the data in each channel should correspond 1:1 with each point.
                              # Channel names in common practice are listed in ChannelFloat32.msg.
                              ChannelFloat32[] channels
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Point32
                        Fields:
                              x : float32
                              y : float32
                              z : float32
                        Comments:
                              # This contains the position of a point in free space(with 32 bits of precision).
                              # It is recommeded to use Point wherever possible instead of Point32.  
                              # 
                              # This recommendation is to promote interoperability.  
                              #
                              # This message is designed to take up less space when sending
                              # lots of points at once, as in the case of a PointCloud.  
                              
                              float32 x
                              float32 y
                              float32 
                  Message Type: sensor_msgs/ChannelFloat32
                        Fields:
                              name : string
                              values : float32[]
                        Comments:
                              # This message is used by the PointCloud message to hold optional data
                              # associated with each point in the cloud. The length of the values
                              # array should be the same as the length of the points array in the
                              # PointCloud, and each value should be associated with the corresponding
                              # point.
                              
                              # Channel names in existing practice include:
                              #   "u", "v" - row and column (respectively) in the left stereo image.
                              #              This is opposite to usual conventions but remains for
                              #              historical reasons. The newer PointCloud2 message has no
                              #              such problem.
                              #   "rgb" - For point clouds produced by color stereo cameras. uint8
                              #           (R,G,B) values packed into the least significant 24 bits,
                              #           in order.
                              #   "intensity" - laser or pixel intensity.
                              #   "distance"
                              
                              # The channel name should give semantics of the channel (e.g.
                              # "intensity" instead of "value").
                              string name
                              
                              # The values array should be 1-1 with the elements of the associated
                              # PointCloud.
                              float32[] values
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: laser_scan_assembler
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: scan
                        Message Type: sensor_msgs/LaserScan
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /assemble_scans
                        Message: /assemble_scansRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /assemble_scans
                        Message: /assemble_scansResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /assemble_scans2
                        Message: /assemble_scans2Request
                              Request Message Type: laser_assembler/AssembleScans2Request
                  Service: /assemble_scans2
                        Message: /assemble_scans2Response
                              Response Message Type: laser_assembler/AssembleScans2Response
                  Service: /build_cloud
                        Message: /build_cloudRequest
                              Request Message Type: laser_assembler/AssembleScansRequest
                  Service: /build_cloud
                        Message: /build_cloudResponse
                              Response Message Type: laser_assembler/AssembleScansResponse
                  Service: /build_cloud2
                        Message: /build_cloud2Request
                              Request Message Type: laser_assembler/AssembleScans2Request
                  Service: /build_cloud2
                        Message: /build_cloud2Response
                              Response Message Type: laser_assembler/AssembleScans2Response
                  Service: /laser_scan_assembler/get_loggers
                        Message: /laser_scan_assembler/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /laser_scan_assembler/get_loggers
                        Message: /laser_scan_assembler/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /laser_scan_assembler/set_logger_level
                        Message: /laser_scan_assembler/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /laser_scan_assembler/set_logger_level
                        Message: /laser_scan_assembler/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: laser_assembler/AssembleScansRequest
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScansResponse
                        Fields:
                              cloud : sensor_msgs/PointCloud
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud cloud
                  Message Type: laser_assembler/AssembleScans2Request
                        Fields:
                              begin : time
                              end : time
                        Comments:
                              # The time interval on which we want to aggregate scans
                              time begin
                              # The end of the interval on which we want to assemble scans or clouds
                              time end
                  Message Type: laser_assembler/AssembleScans2Response
                        Fields:
                              cloud : sensor_msgs/PointCloud2
                        Comments:
                              # The point cloud holding the assembled clouds or scans. 
                              # This cloud is in the frame specified by the ~fixed_frame node parameter. 
                              # cloud is empty if no scans are received in the requested interval.
                              sensor_msgs/PointCloud2 cloud
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: sensor_msgs/PointCloud
                        Fields:
                              header : std_msgs/Header
                              points : geometry_msgs/Point32[]
                              channels : sensor_msgs/ChannelFloat32[]
                        Comments:
                              # This message holds a collection of 3d points, plus optional additional
                              # information about each point.
                              
                              # Time of sensor data acquisition, coordinate frame ID.
                              Header header
                              
                              # Array of 3d points. Each Point32 should be interpreted as a 3d point
                              # in the frame given in the header.
                              geometry_msgs/Point32[] points
                              
                              # Each channel should have the same number of elements as points array,
                              # and the data in each channel should correspond 1:1 with each point.
                              # Channel names in common practice are listed in ChannelFloat32.msg.
                              ChannelFloat32[] channels
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Point32
                        Fields:
                              x : float32
                              y : float32
                              z : float32
                        Comments:
                              # This contains the position of a point in free space(with 32 bits of precision).
                              # It is recommeded to use Point wherever possible instead of Point32.  
                              # 
                              # This recommendation is to promote interoperability.  
                              #
                              # This message is designed to take up less space when sending
                              # lots of points at once, as in the case of a PointCloud.  
                              
                              float32 x
                              float32 y
                              float32 
                  Message Type: sensor_msgs/ChannelFloat32
                        Fields:
                              name : string
                              values : float32[]
                        Comments:
                              # This message is used by the PointCloud message to hold optional data
                              # associated with each point in the cloud. The length of the values
                              # array should be the same as the length of the points array in the
                              # PointCloud, and each value should be associated with the corresponding
                              # point.
                              
                              # Channel names in existing practice include:
                              #   "u", "v" - row and column (respectively) in the left stereo image.
                              #              This is opposite to usual conventions but remains for
                              #              historical reasons. The newer PointCloud2 message has no
                              #              such problem.
                              #   "rgb" - For point clouds produced by color stereo cameras. uint8
                              #           (R,G,B) values packed into the least significant 24 bits,
                              #           in order.
                              #   "intensity" - laser or pixel intensity.
                              #   "distance"
                              
                              # The channel name should give semantics of the channel (e.g.
                              # "intensity" instead of "value").
                              string name
                              
                              # The values array should be 1-1 with the elements of the associated
                              # PointCloud.
                              float32[] values
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
laser_filters
      Node: generic_laser_filter_node
            Publications:
                  Topic: output
                        Message Type: sensor_msgs/LaserScan
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: scan_in
                        Message Type: sensor_msgs/LaserScan
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /scan_filter_node/get_loggers
                        Message: /scan_filter_node/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /scan_filter_node/get_loggers
                        Message: /scan_filter_node/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /scan_filter_node/set_logger_level
                        Message: /scan_filter_node/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /scan_filter_node/set_logger_level
                        Message: /scan_filter_node/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: scan_to_cloud_filter_chain
            Publications:
                  Topic: cloud_filtered
                        Message Type: sensor_msgs/PointCloud2
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: scan
                        Message Type: sensor_msgs/LaserScan
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /scan_to_cloud_filter_chain/get_loggers
                        Message: /scan_to_cloud_filter_chain/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /scan_to_cloud_filter_chain/get_loggers
                        Message: /scan_to_cloud_filter_chain/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /scan_to_cloud_filter_chain/set_logger_level
                        Message: /scan_to_cloud_filter_chain/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /scan_to_cloud_filter_chain/set_logger_level
                        Message: /scan_to_cloud_filter_chain/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: scan_to_scan_filter_chain
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: scan_filtered
                        Message Type: sensor_msgs/LaserScan
            Subscriptions:
                  Topic: scan
                        Message Type: sensor_msgs/LaserScan
            Services Provided:
                  Service: /scan_to_scan_filter_chain/get_loggers
                        Message: /scan_to_scan_filter_chain/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /scan_to_scan_filter_chain/get_loggers
                        Message: /scan_to_scan_filter_chain/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /scan_to_scan_filter_chain/set_logger_level
                        Message: /scan_to_scan_filter_chain/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /scan_to_scan_filter_chain/set_logger_level
                        Message: /scan_to_scan_filter_chain/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/LaserScan
                        Fields:
                              header : std_msgs/Header
                              angle_min : float32
                              angle_max : float32
                              angle_increment : float32
                              time_increment : float32
                              scan_time : float32
                              range_min : float32
                              range_max : float32
                              ranges : float32[]
                              intensities : float32[]
                        Comments:
                              # Single scan from a planar laser range-finder
                              #
                              # If you have another ranging device with different behavior (e.g. a sonar
                              # array), please find or create a different message, since applications
                              # will make fairly laser-specific assumptions about this data
                              
                              Header header            # timestamp in the header is the acquisition time of 
                                                       # the first ray in the scan.
                                                       #
                                                       # in frame frame_id, angles are measured around 
                                                       # the positive Z axis (counterclockwise, if Z is up)
                                                       # with zero angle being forward along the x axis
                                                       
                              float32 angle_min        # start angle of the scan [rad]
                              float32 angle_max        # end angle of the scan [rad]
                              float32 angle_increment  # angular distance between measurements [rad]
                              
                              float32 time_increment   # time between measurements [seconds] - if your scanner
                                                       # is moving, this will be used in interpolating position
                                                       # of 3d points
                              float32 scan_time        # time between scans [seconds]
                              
                              float32 range_min        # minimum range value [m]
                              float32 range_max        # maximum range value [m]
                              
                              float32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)
                              float32[] intensities    # intensity data [device-specific units].  If your
                                                       # device does not provide intensities, please leave
                                                       # the array empty.
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
laser_geometry
laser_pipeline
librviz_tutorial
      Node: myviz
            Publications:
                  Topic: goal
                        Message Type: geometry_msgs/PoseStamped
                  Topic: initialpose
                        Message Type: geometry_msgs/PoseWithCovarianceStamped
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /rviz/get_loggers
                        Message: /rviz/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rviz/get_loggers
                        Message: /rviz/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /myviz_1595353863667649228/set_logger_level
                        Message: /myviz_1595353863667649228/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /myviz_1595353863667649228/set_logger_level
                        Message: /myviz_1595353863667649228/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: geometry_msgs/PoseStamped
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                        Comments:
                              # A Pose with reference coordinate frame and timestamp
                              Header header
                              Pose pose
                  Message Type: geometry_msgs/PoseWithCovarianceStamped
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/PoseWithCovariance
                        Comments:
                              # This expresses an estimated pose with a reference coordinate frame and timestamp
                              
                              Header header
                              PoseWithCovariance pose
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/PoseWithCovariance
                        Fields:
                              pose : geometry_msgs/Pose
                              covariance : float64[36]
                        Comments:
                              # This represents a pose in free space with uncertainty.
                              
                              Pose pose
                              
                              # Row-major representation of the 6x6 covariance matrix
                              # The orientation parameters use a fixed-axis representation.
                              # In order, the parameters are:
                              # (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)
                              float64[36] covariance
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
map_msgs
media_export
message_filters
message_generation
message_runtime
mk
nav_msgs
nodelet
      Node: nodelet
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: list_nodelets
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: declared_nodelets
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
nodelet_core
nodelet_topic_tools
nodelet_tutorial_math
pcl_conversions
pcl_msgs
pcl_ros
      Node: convert_pcd_to_image
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: pointcloud_to_pcd
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: input
                        Message Type: sensor_msgs/PointCloud2
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /pointcloud_to_pcd_1595353890818835995/get_loggers
                        Message: /pointcloud_to_pcd_1595353890818835995/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /pointcloud_to_pcd_1595353890818835995/get_loggers
                        Message: /pointcloud_to_pcd_1595353890818835995/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /pointcloud_to_pcd_1595353890818835995/set_logger_level
                        Message: /pointcloud_to_pcd_1595353890818835995/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /pointcloud_to_pcd_1595353890818835995/set_logger_level
                        Message: /pointcloud_to_pcd_1595353890818835995/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: pcd_to_pointcloud
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: bag_to_pcd
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: convert_pointcloud_to_image
            Publications:
                  Topic: output
                        Message Type: sensor_msgs/Image
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: input
                        Message Type: sensor_msgs/PointCloud2
            Services Provided:
                  Service: /convert_pointcloud_to_image/get_loggers
                        Message: /convert_pointcloud_to_image/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /convert_pointcloud_to_image/get_loggers
                        Message: /convert_pointcloud_to_image/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /convert_pointcloud_to_image/set_logger_level
                        Message: /convert_pointcloud_to_image/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /convert_pointcloud_to_image/set_logger_level
                        Message: /convert_pointcloud_to_image/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
perception
perception_pcl
pluginlib
pluginlib_tutorials
      Node: polygon_loader
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
polled_camera
      Node: poller
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
position_controllers
python_qt_binding
qt_dotgraph
qt_gui
qt_gui_cpp
qt_gui_py_common
qwt_dependency
realtime_tools
resource_retriever
robot
robot_state_publisher
      Node: robot_state_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
ros
ros_base
ros_comm
ros_core
ros_environment
ros_tutorials
rosbag
      Node: play
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: record
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: encrypt
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rosbag_migration_rule
rosbag_storage
rosbash
rosboost_cfg
rosbuild
rosclean
rosconsole
rosconsole_bridge
roscpp
roscpp_core
roscpp_serialization
roscpp_traits
roscpp_tutorials
      Node: listener_class
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener_class/get_loggers
                        Message: /listener_class/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener_class/get_loggers
                        Message: /listener_class/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener_class/set_logger_level
                        Message: /listener_class/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener_class/set_logger_level
                        Message: /listener_class/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_async_spin
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_unreliable
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener_unreliable/get_loggers
                        Message: /listener_unreliable/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener_unreliable/get_loggers
                        Message: /listener_unreliable/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener_unreliable/set_logger_level
                        Message: /listener_unreliable/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener_unreliable/set_logger_level
                        Message: /listener_unreliable/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_threaded_spin
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: add_two_ints_client
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_with_tracked_object
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: node_handle_namespaces
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: parameters
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: custom_callback_processing
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener_with_custom_callback_processing/get_loggers
                        Message: /listener_with_custom_callback_processing/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener_with_custom_callback_processing/get_loggers
                        Message: /listener_with_custom_callback_processing/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener_with_custom_callback_processing/set_logger_level
                        Message: /listener_with_custom_callback_processing/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener_with_custom_callback_processing/set_logger_level
                        Message: /listener_with_custom_callback_processing/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: cached_parameters
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: add_two_ints_server
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /add_two_ints
                        Message: /add_two_intsRequest
                              Request Message Type: roscpp_tutorials/TwoIntsRequest
                  Service: /add_two_ints
                        Message: /add_two_intsResponse
                              Response Message Type: roscpp_tutorials/TwoIntsResponse
                  Service: /add_two_ints_server/get_loggers
                        Message: /add_two_ints_server/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /add_two_ints_server/get_loggers
                        Message: /add_two_ints_server/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /add_two_ints_server/set_logger_level
                        Message: /add_two_ints_server/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /add_two_ints_server/set_logger_level
                        Message: /add_two_ints_server/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp_tutorials/TwoIntsRequest
                        Fields:
                              a : int64
                              b : int64
                        Comments:
                              int64 a
                              int64 b
                  Message Type: roscpp_tutorials/TwoIntsResponse
                        Fields:
                              sum : int64
                        Comments:
                              int64 sum
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: talker
            Publications:
                  Topic: chatter
                        Message Type: std_msgs/String
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /talker/get_loggers
                        Message: /talker/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /talker/get_loggers
                        Message: /talker/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /talker/set_logger_level
                        Message: /talker/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /talker/set_logger_level
                        Message: /talker/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_with_userdata
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener_with_userdata/get_loggers
                        Message: /listener_with_userdata/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener_with_userdata/get_loggers
                        Message: /listener_with_userdata/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener_with_userdata/set_logger_level
                        Message: /listener_with_userdata/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener_with_userdata/set_logger_level
                        Message: /listener_with_userdata/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: babbler
            Publications:
                  Topic: babble
                        Message Type: std_msgs/String
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /babbler/get_loggers
                        Message: /babbler/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /babbler/get_loggers
                        Message: /babbler/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /babbler/set_logger_level
                        Message: /babbler/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /babbler/set_logger_level
                        Message: /babbler/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: time_api_sleep
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener/get_loggers
                        Message: /listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener/set_logger_level
                        Message: /listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: listener_multiple
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: add_two_ints_server_class
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /add_two_ints
                        Message: /add_two_intsRequest
                              Request Message Type: roscpp_tutorials/TwoIntsRequest
                  Service: /add_two_ints
                        Message: /add_two_intsResponse
                              Response Message Type: roscpp_tutorials/TwoIntsResponse
                  Service: /add_two_ints_server/get_loggers
                        Message: /add_two_ints_server/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /add_two_ints_server/get_loggers
                        Message: /add_two_ints_server/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /add_two_ints_server/set_logger_level
                        Message: /add_two_ints_server/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /add_two_ints_server/set_logger_level
                        Message: /add_two_ints_server/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp_tutorials/TwoIntsRequest
                        Fields:
                              a : int64
                              b : int64
                        Comments:
                              int64 a
                              int64 b
                  Message Type: roscpp_tutorials/TwoIntsResponse
                        Fields:
                              sum : int64
                        Comments:
                              int64 sum
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: anonymous_listener
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: chatter
                        Message Type: std_msgs/String
            Services Provided:
                  Service: /listener_1595354028362293488/get_loggers
                        Message: /listener_1595354028362293488/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /listener_1595354028362293488/get_loggers
                        Message: /listener_1595354028362293488/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /listener_1595354028362293488/set_logger_level
                        Message: /listener_1595354028362293488/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /listener_1595354028362293488/set_logger_level
                        Message: /listener_1595354028362293488/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: notify_connect
            Publications:
                  Topic: chatter
                        Message Type: std_msgs/String
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /notify_connect/get_loggers
                        Message: /notify_connect/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /notify_connect/get_loggers
                        Message: /notify_connect/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /notify_connect/set_logger_level
                        Message: /notify_connect/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /notify_connect/set_logger_level
                        Message: /notify_connect/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: timers
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /talker/get_loggers
                        Message: /talker/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /talker/get_loggers
                        Message: /talker/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /talker/set_logger_level
                        Message: /talker/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /talker/set_logger_level
                        Message: /talker/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
roscreate
roseus
rosgraph
      Node: rosgraph
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rosgraph_msgs
roslang
roslaunch
roslib
      Node: gendeps
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
roslint
      Node: test_wrapper
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
roslisp
roslz4
rosmake
rosmaster
rosmsg
rosnode
rosout
      Node: rosout
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rospack
rosparam
rospy
rospy_tutorials
rosservice
      Node: rosservice
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rostest
rostime
rostopic
      Node: rostopic
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rosunit
roswtf
rqt
rqt_action
rqt_bag
      Node: rqt_bag
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_bag_plugins
rqt_common_plugins
rqt_console
      Node: rqt_console
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_dep
      Node: rqt_dep
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_graph
      Node: rqt_graph
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_gui
      Node: rqt_gui
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_gui_cpp
rqt_gui_py
rqt_image_view
      Node: rqt_image_view
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_launch
      Node: rqt_launch
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_logger_level
      Node: rqt_logger_level
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_moveit
      Node: rqt_moveit
            Publications:
            Subscriptions:
            Services Provided:
            Message Types:
rqt_msg
      Node: rqt_msg
            Publications:
            Subscriptions:
            Services Provided:
            Message Types:
rqt_nav_view
      Node: rqt_nav_view
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_plot
      Node: rqt_plot
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_pose_view
      Node: rqt_pose_view
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_publisher
      Node: rqt_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_py_common
rqt_py_console
      Node: rqt_py_console
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_reconfigure
      Node: rqt_reconfigure
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_robot_dashboard
rqt_robot_monitor
      Node: rqt_robot_monitor
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_robot_plugins
rqt_robot_steering
      Node: rqt_robot_steering
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_runtime_monitor
      Node: rqt_runtime_monitor
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_rviz
      Node: rqt_rviz
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_service_caller
      Node: rqt_service_caller
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_shell
      Node: rqt_shell
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_srv
      Node: rqt_srv
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_tf_tree
      Node: rqt_tf_tree
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_top
      Node: rqt_top
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_topic
      Node: rqt_topic
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rqt_web
      Node: rqt_web
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
rviz
      Node: rviz
            Publications:
                  Topic: clicked_point
                        Message Type: geometry_msgs/PointStamped
                  Topic: initialpose
                        Message Type: geometry_msgs/PoseWithCovarianceStamped
                  Topic: goal
                        Message Type: geometry_msgs/PoseStamped
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /rviz_1595354239444350789/get_loggers
                        Message: /rviz_1595354239444350789/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rviz_1595354239444350789/get_loggers
                        Message: /rviz_1595354239444350789/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rviz_1595354239444350789/load_config
                        Message: /rviz_1595354239444350789/load_configRequest
                              Request Message Type: rviz/SendFilePathRequest
                  Service: /rviz_1595354239444350789/load_config
                        Message: /rviz_1595354239444350789/load_configResponse
                              Response Message Type: rviz/SendFilePathResponse
                  Service: /rviz_1595354239444350789/reload_shaders
                        Message: /rviz_1595354239444350789/reload_shadersRequest
                              Request Message Type: std_srvs/EmptyRequest
                  Service: /rviz_1595354239444350789/reload_shaders
                        Message: /rviz_1595354239444350789/reload_shadersResponse
                              Response Message Type: std_srvs/EmptyResponse
                  Service: /rviz_1595354239444350789/save_config
                        Message: /rviz_1595354239444350789/save_configRequest
                              Request Message Type: rviz/SendFilePathRequest
                  Service: /rviz_1595354239444350789/save_config
                        Message: /rviz_1595354239444350789/save_configResponse
                              Response Message Type: rviz/SendFilePathResponse
                  Service: /rviz_1595354239444350789/set_logger_level
                        Message: /rviz_1595354239444350789/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rviz_1595354239444350789/set_logger_level
                        Message: /rviz_1595354239444350789/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: geometry_msgs/PointStamped
                        Fields:
                              header : std_msgs/Header
                              point : geometry_msgs/Point
                        Comments:
                              # This represents a Point with reference coordinate frame and timestamp
                              Header header
                              Point point
                  Message Type: geometry_msgs/PoseWithCovarianceStamped
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/PoseWithCovariance
                        Comments:
                              # This expresses an estimated pose with a reference coordinate frame and timestamp
                              
                              Header header
                              PoseWithCovariance pose
                  Message Type: geometry_msgs/PoseStamped
                        Fields:
                              header : std_msgs/Header
                              pose : geometry_msgs/Pose
                        Comments:
                              # A Pose with reference coordinate frame and timestamp
                              Header header
                              Pose pose
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: rviz/SendFilePathRequest
                        Fields:
                              path : std_msgs/String
                        Comments:
                              std_msgs/String path # absolute path to file or directory
                  Message Type: rviz/SendFilePathResponse
                        Fields:
                              success : bool
                        Comments:
                              bool success
                  Message Type: std_srvs/EmptyRequest
                        Fields:
                        Comments:
                  Message Type: std_srvs/EmptyResponse
                        Fields:
                        Comments:
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: geometry_msgs/PoseWithCovariance
                        Fields:
                              pose : geometry_msgs/Pose
                              covariance : float64[36]
                        Comments:
                              # This represents a pose in free space with uncertainty.
                              
                              Pose pose
                              
                              # Row-major representation of the 6x6 covariance matrix
                              # The orientation parameters use a fixed-axis representation.
                              # In order, the parameters are:
                              # (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)
                              float64[36] covariance
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: std_msgs/String
                        Fields:
                              data : string
                        Comments:
                              string data
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
rviz_plugin_tutorials
rviz_python_tutorial
self_test
sensor_msgs
shape_msgs
simulators
smach
smach_msgs
smach_ros
smclib
stage
stage_ros
      Node: stageros
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: upgrade-world.sh
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
std_msgs
std_srvs
stereo_image_proc
      Node: stereo_image_proc
            Publications:
                  Topic: disparity
                        Message Type: stereo_msgs/DisparityImage
                  Topic: image_color
                        Message Type: sensor_msgs/Image
                  Topic: image_color/compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_color/compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_color/compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_color/compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_color/compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_color/compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_color/theora
                        Message Type: theora_image_transport/Packet
                  Topic: image_color/theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_color/theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_mono
                        Message Type: sensor_msgs/Image
                  Topic: image_mono/compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_mono/compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_mono/compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_mono/compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_mono/compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_mono/compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_mono/theora
                        Message Type: theora_image_transport/Packet
                  Topic: image_mono/theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_mono/theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect
                        Message Type: sensor_msgs/Image
                  Topic: image_rect/compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_rect/compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect/compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect/compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_rect/compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect/compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect/theora
                        Message Type: theora_image_transport/Packet
                  Topic: image_rect/theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect/theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect_color
                        Message Type: sensor_msgs/Image
                  Topic: image_rect_color/compressed
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_rect_color/compressed/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect_color/compressed/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect_color/compressedDepth
                        Message Type: sensor_msgs/CompressedImage
                  Topic: image_rect_color/compressedDepth/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect_color/compressedDepth/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: image_rect_color/theora
                        Message Type: theora_image_transport/Packet
                  Topic: image_rect_color/theora/parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: image_rect_color/theora/parameter_updates
                        Message Type: dynamic_reconfigure/Config
                  Topic: points2
                        Message Type: sensor_msgs/PointCloud2
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: parameter_descriptions
                        Message Type: dynamic_reconfigure/ConfigDescription
                  Topic: parameter_updates
                        Message Type: dynamic_reconfigure/Config
            Subscriptions:
            Services Provided:
                  Service: /right/image_color/compressed/set_parameters
                        Message: /right/image_color/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_color/compressed/set_parameters
                        Message: /right/image_color/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_color/compressedDepth/set_parameters
                        Message: /right/image_color/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_color/compressedDepth/set_parameters
                        Message: /right/image_color/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_color/theora/set_parameters
                        Message: /right/image_color/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_color/theora/set_parameters
                        Message: /right/image_color/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_mono/compressed/set_parameters
                        Message: /right/image_mono/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_mono/compressed/set_parameters
                        Message: /right/image_mono/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_mono/compressedDepth/set_parameters
                        Message: /right/image_mono/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_mono/compressedDepth/set_parameters
                        Message: /right/image_mono/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_mono/theora/set_parameters
                        Message: /right/image_mono/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_mono/theora/set_parameters
                        Message: /right/image_mono/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect/compressed/set_parameters
                        Message: /right/image_rect/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect/compressed/set_parameters
                        Message: /right/image_rect/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect/compressedDepth/set_parameters
                        Message: /right/image_rect/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect/compressedDepth/set_parameters
                        Message: /right/image_rect/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect/theora/set_parameters
                        Message: /right/image_rect/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect/theora/set_parameters
                        Message: /right/image_rect/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect_color/compressed/set_parameters
                        Message: /right/image_rect_color/compressed/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect_color/compressed/set_parameters
                        Message: /right/image_rect_color/compressed/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect_color/compressedDepth/set_parameters
                        Message: /right/image_rect_color/compressedDepth/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect_color/compressedDepth/set_parameters
                        Message: /right/image_rect_color/compressedDepth/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /right/image_rect_color/theora/set_parameters
                        Message: /right/image_rect_color/theora/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /right/image_rect_color/theora/set_parameters
                        Message: /right/image_rect_color/theora/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
                  Service: /stereo_image_proc/get_loggers
                        Message: /stereo_image_proc/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /stereo_image_proc/get_loggers
                        Message: /stereo_image_proc/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /stereo_image_proc/set_logger_level
                        Message: /stereo_image_proc/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /stereo_image_proc/set_logger_level
                        Message: /stereo_image_proc/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
                  Service: /stereo_image_proc_rectify_mono_right/set_parameters
                        Message: /stereo_image_proc_rectify_mono_right/set_parametersRequest
                              Request Message Type: dynamic_reconfigure/ReconfigureRequest
                  Service: /stereo_image_proc_rectify_mono_right/set_parameters
                        Message: /stereo_image_proc_rectify_mono_right/set_parametersResponse
                              Response Message Type: dynamic_reconfigure/ReconfigureResponse
            Message Types:
                  Message Type: stereo_msgs/DisparityImage
                        Fields:
                              header : std_msgs/Header
                              image : sensor_msgs/Image
                              f : float32
                              T : float32
                              valid_window : sensor_msgs/RegionOfInterest
                              min_disparity : float32
                              max_disparity : float32
                              delta_d : float32
                        Comments:
                              # Separate header for compatibility with current TimeSynchronizer.
                              # Likely to be removed in a later release, use image.header instead.
                              Header header
                              
                              # Floating point disparity image. The disparities are pre-adjusted for any
                              # x-offset between the principal points of the two cameras (in the case
                              # that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)
                              sensor_msgs/Image image
                              
                              # Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.
                              float32 f # Focal length, pixels
                              float32 T # Baseline, world units
                              
                              # Subwindow of (potentially) valid disparity values.
                              sensor_msgs/RegionOfInterest valid_window
                              
                              # The range of disparities searched.
                              # In the disparity image, any disparity less than min_disparity is invalid.
                              # The disparity search range defines the horopter, or 3D volume that the
                              # stereo algorithm can "see". Points with Z outside of:
                              #     Z_min = fT / max_disparity
                              #     Z_max = fT / min_disparity
                              # could not be found.
                              float32 min_disparity
                              float32 max_disparity
                              
                              # Smallest allowed disparity increment. The smallest achievable depth range
                              # resolution is delta_Z = (Z^2/fT)*delta_d.
                              float32 delta_d
                  Message Type: sensor_msgs/Image
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              encoding : string
                              is_bigendian : uint8
                              step : uint32
                              data : uint8[]
                        Comments:
                              # This message contains an uncompressed image
                              # (0, 0) is at top-left corner of image
                              #
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                                                   # If the frame_id here and the frame_id of the CameraInfo
                                                   # message associated with the image conflict
                                                   # the behavior is undefined
                              
                              uint32 height         # image height, that is, number of rows
                              uint32 width          # image width, that is, number of columns
                              
                              # The legal values for encoding are in file src/image_encodings.cpp
                              # If you want to standardize a new string format, join
                              # ros-users@lists.sourceforge.net and send an email proposing a new encoding.
                              
                              string encoding       # Encoding of pixels -- channel meaning, ordering, size
                                                    # taken from the list of strings in include/sensor_msgs/image_encodings.h
                              
                              uint8 is_bigendian    # is this data bigendian?
                              uint32 step           # Full row length in bytes
                              uint8[] data          # actual matrix data, size is (step * rows)
                  Message Type: sensor_msgs/CompressedImage
                        Fields:
                              header : std_msgs/Header
                              format : string
                              data : uint8[]
                        Comments:
                              # This message contains a compressed image
                              
                              Header header        # Header timestamp should be acquisition time of image
                                                   # Header frame_id should be optical frame of camera
                                                   # origin of frame should be optical center of camera
                                                   # +x should point to the right in the image
                                                   # +y should point down in the image
                                                   # +z should point into to plane of the image
                              
                              string format        # Specifies the format of the data
                                                   #   Acceptable values:
                                                   #     jpeg, png
                              uint8[] data         # Compressed image buffer
                  Message Type: dynamic_reconfigure/ConfigDescription
                        Fields:
                              groups : dynamic_reconfigure/Group[]
                              max : dynamic_reconfigure/Config
                              min : dynamic_reconfigure/Config
                              dflt : dynamic_reconfigure/Config
                        Comments:
                              Group[] groups
                              Config max
                              Config min
                              Config dflt
                  Message Type: dynamic_reconfigure/Config
                        Fields:
                              bools : dynamic_reconfigure/BoolParameter[]
                              ints : dynamic_reconfigure/IntParameter[]
                              strs : dynamic_reconfigure/StrParameter[]
                              doubles : dynamic_reconfigure/DoubleParameter[]
                              groups : dynamic_reconfigure/GroupState[]
                        Comments:
                              BoolParameter[] bools
                              IntParameter[] ints
                              StrParameter[] strs
                              DoubleParameter[] doubles
                              GroupState[] groups
                  Message Type: theora_image_transport/Packet
                        Fields:
                              header : std_msgs/Header
                              data : uint8[]
                              b_o_s : int32
                              e_o_s : int32
                              granulepos : int64
                              packetno : int64
                        Comments:
                              # ROS message adaptation of the ogg_packet struct from libogg,
                              # see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.
                              
                              Header header     # Original sensor_msgs/Image header
                              uint8[] data      # Raw Theora packet data (combines packet and bytes fields from ogg_packet)
                              int32 b_o_s       # Flag indicating whether this packet begins a logical bitstream
                              int32 e_o_s       # Flag indicating whether this packet ends a bitstream
                              int64 granulepos  # A number indicating the position of this packet in the decoded data
                              int64 packetno    # Sequential number of this packet in the ogg bitstream
                  Message Type: sensor_msgs/PointCloud2
                        Fields:
                              header : std_msgs/Header
                              height : uint32
                              width : uint32
                              fields : sensor_msgs/PointField[]
                              is_bigendian : bool
                              point_step : uint32
                              row_step : uint32
                              data : uint8[]
                              is_dense : bool
                        Comments:
                              # This message holds a collection of N-dimensional points, which may
                              # contain additional information such as normals, intensity, etc. The
                              # point data is stored as a binary blob, its layout described by the
                              # contents of the "fields" array.
                              
                              # The point cloud data may be organized 2d (image-like) or 1d
                              # (unordered). Point clouds organized as 2d images may be produced by
                              # camera depth sensors such as stereo or time-of-flight.
                              
                              # Time of sensor data acquisition, and the coordinate frame ID (for 3d
                              # points).
                              Header header
                              
                              # 2D structure of the point cloud. If the cloud is unordered, height is
                              # 1 and width is the length of the point cloud.
                              uint32 height
                              uint32 width
                              
                              # Describes the channels and their layout in the binary data blob.
                              PointField[] fields
                              
                              bool    is_bigendian # Is this data bigendian?
                              uint32  point_step   # Length of a point in bytes
                              uint32  row_step     # Length of a row in bytes
                              uint8[] data         # Actual point data, size is (row_step*height)
                              
                              bool is_dense        # True if there are no invalid points
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: dynamic_reconfigure/ReconfigureRequest
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: dynamic_reconfigure/ReconfigureResponse
                        Fields:
                              config : dynamic_reconfigure/Config
                        Comments:
                              Config config
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: sensor_msgs/RegionOfInterest
                        Fields:
                              x_offset : uint32
                              y_offset : uint32
                              height : uint32
                              width : uint32
                              do_rectify : bool
                        Comments:
                              # This message is used to specify a region of interest within an image.
                              #
                              # When used to specify the ROI setting of the camera when the image was
                              # taken, the height and width fields should either match the height and
                              # width fields for the associated image; or height = width = 0
                              # indicates that the full resolution image was captured.
                              
                              uint32 x_offset  # Leftmost pixel of the ROI
                                               # (0 if the ROI includes the left edge of the image)
                              uint32 y_offset  # Topmost pixel of the ROI
                                               # (0 if the ROI includes the top edge of the image)
                              uint32 height    # Height of ROI
                              uint32 width     # Width of ROI
                              
                              # True if a distinct rectified ROI should be calculated from the "raw"
                              # ROI in this message. Typically this should be False if the full image
                              # is captured (ROI not used), and True if a subwindow is captured (ROI
                              # used).
                              bool do_rectify
                  Message Type: dynamic_reconfigure/Group
                        Fields:
                              name : string
                              type : string
                              parameters : dynamic_reconfigure/ParamDescription[]
                              parent : int32
                              id : int32
                        Comments:
                              string name
                              string type
                              ParamDescription[] parameters
                              int32 parent 
                              int32 id
                  Message Type: dynamic_reconfigure/BoolParameter
                        Fields:
                              name : string
                              value : bool
                        Comments:
                              string name
                              bool value
                  Message Type: dynamic_reconfigure/IntParameter
                        Fields:
                              name : string
                              value : int32
                        Comments:
                              string name
                              int32 value
                  Message Type: dynamic_reconfigure/StrParameter
                        Fields:
                              name : string
                              value : string
                        Comments:
                              string name
                              string value
                  Message Type: dynamic_reconfigure/DoubleParameter
                        Fields:
                              name : string
                              value : float64
                        Comments:
                              string name
                              float64 value
                  Message Type: dynamic_reconfigure/GroupState
                        Fields:
                              name : string
                              state : bool
                              id : int32
                              parent : int32
                        Comments:
                              string name
                              bool state
                              int32 id
                              int32 parent
                  Message Type: sensor_msgs/PointField
                        Fields:
                              INT8=1 : uint8
                              UINT8=2 : uint8
                              INT16=3 : uint8
                              UINT16=4 : uint8
                              INT32=5 : uint8
                              UINT32=6 : uint8
                              FLOAT32=7 : uint8
                              FLOAT64=8 : uint8
                              name : string
                              offset : uint32
                              datatype : uint8
                              count : uint32
                        Comments:
                              # This message holds the description of one point entry in the
                              # PointCloud2 message format.
                              uint8 INT8    = 1
                              uint8 UINT8   = 2
                              uint8 INT16   = 3
                              uint8 UINT16  = 4
                              uint8 INT32   = 5
                              uint8 UINT32  = 6
                              uint8 FLOAT32 = 7
                              uint8 FLOAT64 = 8
                              
                              string name      # Name of field
                              uint32 offset    # Offset from start of point struct
                              uint8  datatype  # Datatype enumeration, see above
                              uint32 count     # How many elements in the field
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: dynamic_reconfigure/ParamDescription
                        Fields:
                              name : string
                              type : string
                              level : uint32
                              description : string
                              edit_method : string
                        Comments:
                              string name
                              string type
                              uint32 level
                              string description
                              string edit_method
stereo_msgs
tf
      Node: tf_empty_listener
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /my_tf_listener/get_loggers
                        Message: /my_tf_listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /my_tf_listener/get_loggers
                        Message: /my_tf_listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /my_tf_listener/set_logger_level
                        Message: /my_tf_listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /my_tf_listener/set_logger_level
                        Message: /my_tf_listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: tf_monitor
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf2_msgs/TFMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /tf_monitor_1595354289565298264/get_loggers
                        Message: /tf_monitor_1595354289565298264/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /tf_monitor_1595354289565298264/get_loggers
                        Message: /tf_monitor_1595354289565298264/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /tf_monitor_1595354289565298264/set_logger_level
                        Message: /tf_monitor_1595354289565298264/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /tf_monitor_1595354289565298264/set_logger_level
                        Message: /tf_monitor_1595354289565298264/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: static_transform_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: tf_remap
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: tf
                        Message Type: tf/tfMessage
            Subscriptions:
                  Topic: tf_old
                        Message Type: tf/tfMessage
            Services Provided:
                  Service: /tf_remapper/get_loggers
                        Message: /tf_remapper/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /tf_remapper/get_loggers
                        Message: /tf_remapper/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /tf_remapper/set_logger_level
                        Message: /tf_remapper/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /tf_remapper/set_logger_level
                        Message: /tf_remapper/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf/tfMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: view_frames
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf/tfMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /view_frames_47003_1595354304989/get_loggers
                        Message: /view_frames_47003_1595354304989/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /view_frames_47003_1595354304989/get_loggers
                        Message: /view_frames_47003_1595354304989/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /view_frames_47003_1595354304989/set_logger_level
                        Message: /view_frames_47003_1595354304989/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /view_frames_47003_1595354304989/set_logger_level
                        Message: /view_frames_47003_1595354304989/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf/tfMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: tf_change_notifier
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: tf_changes
                        Message Type: tf/tfMessage
            Subscriptions:
                  Topic: tf
                        Message Type: tf/tfMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /change_notifier_1595354310589097471/get_loggers
                        Message: /change_notifier_1595354310589097471/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /change_notifier_1595354310589097471/get_loggers
                        Message: /change_notifier_1595354310589097471/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /change_notifier_1595354310589097471/set_logger_level
                        Message: /change_notifier_1595354310589097471/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /change_notifier_1595354310589097471/set_logger_level
                        Message: /change_notifier_1595354310589097471/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf/tfMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: tf_echo
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
tf2
tf2_eigen
tf2_geometry_msgs
tf2_kdl
tf2_msgs
tf2_py
tf2_ros
      Node: static_transform_publisher
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: buffer_server
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: feedback
                        Message Type: tf2_msgs/LookupTransformActionFeedback
                  Topic: result
                        Message Type: tf2_msgs/LookupTransformActionResult
                  Topic: status
                        Message Type: actionlib_msgs/GoalStatusArray
            Subscriptions:
                  Topic: tf
                        Message Type: tf/tfMessage
                  Topic: tf2_buffer_server/cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: tf2_buffer_server/goal
                        Message Type: tf2_msgs/LookupTransformActionGoal
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
            Services Provided:
                  Service: /tf_buffer/get_loggers
                        Message: /tf_buffer/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /tf_buffer/get_loggers
                        Message: /tf_buffer/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /tf_buffer/set_logger_level
                        Message: /tf_buffer/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /tf_buffer/set_logger_level
                        Message: /tf_buffer/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf2_msgs/LookupTransformActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : tf2_msgs/LookupTransformFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              LookupTransformFeedback feedback
                  Message Type: tf2_msgs/LookupTransformActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : tf2_msgs/LookupTransformResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              LookupTransformResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: tf/tfMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: tf2_msgs/LookupTransformActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : tf2_msgs/LookupTransformGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              LookupTransformGoal goal
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: tf2_msgs/LookupTransformFeedback
                        Fields:
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                  Message Type: tf2_msgs/LookupTransformResult
                        Fields:
                              transform : geometry_msgs/TransformStamped
                              error : tf2_msgs/TF2Error
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              geometry_msgs/TransformStamped transform
                              tf2_msgs/TF2Error error
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: tf2_msgs/LookupTransformGoal
                        Fields:
                              target_frame : string
                              source_frame : string
                              source_time : time
                              timeout : duration
                              target_time : time
                              fixed_frame : string
                              advanced : bool
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #Simple API
                              string target_frame
                              string source_frame
                              time source_time
                              duration timeout
                              
                              #Advanced API
                              time target_time
                              string fixed_frame
                              
                              #Whether or not to use the advanced API
                              bool advanced
                              
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: tf2_msgs/TF2Error
                        Fields:
                              NO_ERROR=0 : uint8
                              LOOKUP_ERROR=1 : uint8
                              CONNECTIVITY_ERROR=2 : uint8
                              EXTRAPOLATION_ERROR=3 : uint8
                              INVALID_ARGUMENT_ERROR=4 : uint8
                              TIMEOUT_ERROR=5 : uint8
                              TRANSFORM_ERROR=6 : uint8
                              error : uint8
                              error_string : string
                        Comments:
                              uint8 NO_ERROR = 0
                              uint8 LOOKUP_ERROR = 1
                              uint8 CONNECTIVITY_ERROR = 2
                              uint8 EXTRAPOLATION_ERROR = 3
                              uint8 INVALID_ARGUMENT_ERROR = 4
                              uint8 TIMEOUT_ERROR = 5
                              uint8 TRANSFORM_ERROR = 6
                              
                              uint8 error
                              string error_string
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
tf2_tools
tf_conversions
theora_image_transport
      Node: ogg_saver
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
topic_tools
      Node: throttle
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: switch_mux
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mux_add
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mux
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: demux
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mux_select
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mux_delete
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: relay_field
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: transform
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: drop
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mux_list
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: relay
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
trajectory_msgs
transmission_interface
turtle_actionlib
      Node: shape_client
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: goal
                        Message Type: turtle_actionlib/ShapeActionGoal
            Subscriptions:
                  Topic: turtle_shape/feedback
                        Message Type: turtle_actionlib/ShapeActionFeedback
                  Topic: turtle_shape/result
                        Message Type: turtle_actionlib/ShapeActionResult
                  Topic: turtle_shape/status
                        Message Type: actionlib_msgs/GoalStatusArray
            Services Provided:
                  Service: /test_shape/get_loggers
                        Message: /test_shape/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /test_shape/get_loggers
                        Message: /test_shape/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /test_shape/set_logger_level
                        Message: /test_shape/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /test_shape/set_logger_level
                        Message: /test_shape/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: turtle_actionlib/ShapeActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : turtle_actionlib/ShapeGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              ShapeGoal goal
                  Message Type: turtle_actionlib/ShapeActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : turtle_actionlib/ShapeFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              ShapeFeedback feedback
                  Message Type: turtle_actionlib/ShapeActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : turtle_actionlib/ShapeResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              ShapeResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: turtle_actionlib/ShapeGoal
                        Fields:
                              edges : int32
                              radius : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 edges
                              float32 radius
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: turtle_actionlib/ShapeFeedback
                        Fields:
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              
                              
                  Message Type: turtle_actionlib/ShapeResult
                        Fields:
                              interior_angle : float32
                              apothem : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              float32 interior_angle
                              float32 apothem
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: shape_server
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: cmd_vel
                        Message Type: geometry_msgs/Twist
                  Topic: feedback
                        Message Type: turtle_actionlib/ShapeActionFeedback
                  Topic: result
                        Message Type: turtle_actionlib/ShapeActionResult
                  Topic: status
                        Message Type: actionlib_msgs/GoalStatusArray
            Subscriptions:
                  Topic: turtle1/pose
                        Message Type: turtlesim/Pose
                  Topic: turtle_shape/cancel
                        Message Type: actionlib_msgs/GoalID
                  Topic: turtle_shape/goal
                        Message Type: turtle_actionlib/ShapeActionGoal
            Services Provided:
                  Service: /turtle_shape/get_loggers
                        Message: /turtle_shape/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /turtle_shape/get_loggers
                        Message: /turtle_shape/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /turtle_shape/set_logger_level
                        Message: /turtle_shape/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /turtle_shape/set_logger_level
                        Message: /turtle_shape/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: geometry_msgs/Twist
                        Fields:
                              linear : geometry_msgs/Vector3
                              angular : geometry_msgs/Vector3
                        Comments:
                              # This expresses velocity in free space broken into its linear and angular parts.
                              Vector3  linear
                              Vector3  angular
                  Message Type: turtle_actionlib/ShapeActionFeedback
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              feedback : turtle_actionlib/ShapeFeedback
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              ShapeFeedback feedback
                  Message Type: turtle_actionlib/ShapeActionResult
                        Fields:
                              header : std_msgs/Header
                              status : actionlib_msgs/GoalStatus
                              result : turtle_actionlib/ShapeResult
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalStatus status
                              ShapeResult result
                  Message Type: actionlib_msgs/GoalStatusArray
                        Fields:
                              header : std_msgs/Header
                              status_list : actionlib_msgs/GoalStatus[]
                        Comments:
                              # Stores the statuses for goals that are currently being tracked
                              # by an action server
                              Header header
                              GoalStatus[] status_list
                              
                  Message Type: turtlesim/Pose
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                              linear_velocity : float32
                              angular_velocity : float32
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                              
                              float32 linear_velocity
                              float32 angular_velocit
                  Message Type: actionlib_msgs/GoalID
                        Fields:
                              stamp : time
                              id : string
                        Comments:
                              # The stamp should store the time at which this goal was requested.
                              # It is used by an action server when it tries to preempt all
                              # goals that were requested before a certain time
                              time stamp
                              
                              # The id provides a way to associate feedback and
                              # result message with specific goal requests. The id
                              # specified must be unique.
                              string id
                              
                  Message Type: turtle_actionlib/ShapeActionGoal
                        Fields:
                              header : std_msgs/Header
                              goal_id : actionlib_msgs/GoalID
                              goal : turtle_actionlib/ShapeGoal
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              
                              Header header
                              actionlib_msgs/GoalID goal_id
                              ShapeGoal goal
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: actionlib_msgs/GoalStatus
                        Fields:
                              PENDING=0 : uint8
                              ACTIVE=1 : uint8
                              PREEMPTED=2 : uint8
                              SUCCEEDED=3 : uint8
                              ABORTED=4 : uint8
                              REJECTED=5 : uint8
                              PREEMPTING=6 : uint8
                              RECALLING=7 : uint8
                              RECALLED=8 : uint8
                              LOST=9 : uint8
                              goal_id : actionlib_msgs/GoalID
                              status : uint8
                              text : string
                        Comments:
                              GoalID goal_id
                              uint8 status
                              uint8 PENDING         = 0   # The goal has yet to be processed by the action server
                              uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
                              uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                                                          #   and has since completed its execution (Terminal State)
                              uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
                              uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                                                          #    to some failure (Terminal State)
                              uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                                                          #    because the goal was unattainable or invalid (Terminal State)
                              uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                                                          #    and has not yet completed execution
                              uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                                                          #    but the action server has not yet confirmed that the goal is canceled
                              uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                                                          #    and was successfully cancelled (Terminal State)
                              uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                                                          #    sent over the wire by an action server
                              
                              #Allow for the user to associate a string with GoalStatus for debugging
                              string text
                              
                  Message Type: turtle_actionlib/ShapeFeedback
                        Fields:
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #feedback
                              
                              
                  Message Type: turtle_actionlib/ShapeResult
                        Fields:
                              interior_angle : float32
                              apothem : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #result definition
                              float32 interior_angle
                              float32 apothem
                  Message Type: turtle_actionlib/ShapeGoal
                        Fields:
                              edges : int32
                              radius : float32
                        Comments:
                              # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
                              #goal definition
                              int32 edges
                              float32 radius
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
turtle_tf
      Node: turtle_tf_broadcaster
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtle_tf_listener_debug
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
            Services Provided:
                  Service: /my_tf_listener/get_loggers
                        Message: /my_tf_listener/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /my_tf_listener/get_loggers
                        Message: /my_tf_listener/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /my_tf_listener/set_logger_level
                        Message: /my_tf_listener/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /my_tf_listener/set_logger_level
                        Message: /my_tf_listener/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtle_tf_listener
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtle_tf_message_filter
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: tf
                        Message Type: tf/tfMessage
                  Topic: tf_static
                        Message Type: tf2_msgs/TFMessage
                  Topic: turtle_point_stamped
                        Message Type: geometry_msgs/PointStamped
            Services Provided:
                  Service: /pose_drawer/get_loggers
                        Message: /pose_drawer/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /pose_drawer/get_loggers
                        Message: /pose_drawer/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /pose_drawer/set_logger_level
                        Message: /pose_drawer/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /pose_drawer/set_logger_level
                        Message: /pose_drawer/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: tf/tfMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: tf2_msgs/TFMessage
                        Fields:
                              transforms : geometry_msgs/TransformStamped[]
                        Comments:
                              geometry_msgs/TransformStamped[] transforms
                  Message Type: geometry_msgs/PointStamped
                        Fields:
                              header : std_msgs/Header
                              point : geometry_msgs/Point
                        Comments:
                              # This represents a Point with reference coordinate frame and timestamp
                              Header header
                              Point point
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/TransformStamped
                        Fields:
                              header : std_msgs/Header
                              child_frame_id : string
                              transform : geometry_msgs/Transform
                        Comments:
                              # This expresses a transform from coordinate frame header.frame_id
                              # to the coordinate frame child_frame_id
                              #
                              # This message is mostly used by the 
                              # <a href="http://wiki.ros.org/tf">tf</a> package. 
                              # See its documentation for more information.
                              
                              Header header
                              string child_frame_id # the frame id of the child frame
                              Transform transform
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Transform
                        Fields:
                              translation : geometry_msgs/Vector3
                              rotation : geometry_msgs/Quaternion
                        Comments:
                              # This represents the transform between two coordinate frames in free space.
                              
                              Vector3 translation
                              Quaternion rotation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
turtle_tf2
      Node: turtle_tf2_broadcaster
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtle_tf2_listener
            Publications:
            Subscriptions:
            Services Provided:
            Message Types:
turtlesim
      Node: draw_square
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: cmd_vel
                        Message Type: geometry_msgs/Twist
            Subscriptions:
                  Topic: turtle1/pose
                        Message Type: turtlesim/Pose
            Services Provided:
                  Service: /draw_square/get_loggers
                        Message: /draw_square/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /draw_square/get_loggers
                        Message: /draw_square/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /draw_square/set_logger_level
                        Message: /draw_square/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /draw_square/set_logger_level
                        Message: /draw_square/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: geometry_msgs/Twist
                        Fields:
                              linear : geometry_msgs/Vector3
                              angular : geometry_msgs/Vector3
                        Comments:
                              # This expresses velocity in free space broken into its linear and angular parts.
                              Vector3  linear
                              Vector3  angular
                  Message Type: turtlesim/Pose
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                              linear_velocity : float32
                              angular_velocity : float32
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                              
                              float32 linear_velocity
                              float32 angular_velocit
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: mimic
            Publications:
                  Topic: cmd_vel
                        Message Type: geometry_msgs/Twist
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: input/pose
                        Message Type: turtlesim/Pose
            Services Provided:
                  Service: /turtle_mimic/get_loggers
                        Message: /turtle_mimic/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /turtle_mimic/get_loggers
                        Message: /turtle_mimic/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /turtle_mimic/set_logger_level
                        Message: /turtle_mimic/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /turtle_mimic/set_logger_level
                        Message: /turtle_mimic/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: geometry_msgs/Twist
                        Fields:
                              linear : geometry_msgs/Vector3
                              angular : geometry_msgs/Vector3
                        Comments:
                              # This expresses velocity in free space broken into its linear and angular parts.
                              Vector3  linear
                              Vector3  angular
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: turtlesim/Pose
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                              linear_velocity : float32
                              angular_velocity : float32
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                              
                              float32 linear_velocity
                              float32 angular_velocit
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtlesim_node
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: color_sensor
                        Message Type: turtlesim/Color
                  Topic: pose
                        Message Type: turtlesim/Pose
            Subscriptions:
                  Topic: turtle1/cmd_vel
                        Message Type: geometry_msgs/Twist
            Services Provided:
                  Service: /clear
                        Message: /clearRequest
                              Request Message Type: std_srvs/EmptyRequest
                  Service: /clear
                        Message: /clearResponse
                              Response Message Type: std_srvs/EmptyResponse
                  Service: /kill
                        Message: /killRequest
                              Request Message Type: turtlesim/KillRequest
                  Service: /kill
                        Message: /killResponse
                              Response Message Type: turtlesim/KillResponse
                  Service: /reset
                        Message: /resetRequest
                              Request Message Type: std_srvs/EmptyRequest
                  Service: /reset
                        Message: /resetResponse
                              Response Message Type: std_srvs/EmptyResponse
                  Service: /spawn
                        Message: /spawnRequest
                              Request Message Type: turtlesim/SpawnRequest
                  Service: /spawn
                        Message: /spawnResponse
                              Response Message Type: turtlesim/SpawnResponse
                  Service: /turtle1/set_pen
                        Message: /turtle1/set_penRequest
                              Request Message Type: turtlesim/SetPenRequest
                  Service: /turtle1/set_pen
                        Message: /turtle1/set_penResponse
                              Response Message Type: turtlesim/SetPenResponse
                  Service: /turtle1/teleport_absolute
                        Message: /turtle1/teleport_absoluteRequest
                              Request Message Type: turtlesim/TeleportAbsoluteRequest
                  Service: /turtle1/teleport_absolute
                        Message: /turtle1/teleport_absoluteResponse
                              Response Message Type: turtlesim/TeleportAbsoluteResponse
                  Service: /turtle1/teleport_relative
                        Message: /turtle1/teleport_relativeRequest
                              Request Message Type: turtlesim/TeleportRelativeRequest
                  Service: /turtle1/teleport_relative
                        Message: /turtle1/teleport_relativeResponse
                              Response Message Type: turtlesim/TeleportRelativeResponse
                  Service: /turtlesim/get_loggers
                        Message: /turtlesim/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /turtlesim/get_loggers
                        Message: /turtlesim/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /turtlesim/set_logger_level
                        Message: /turtlesim/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /turtlesim/set_logger_level
                        Message: /turtlesim/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: turtlesim/Color
                        Fields:
                              r : uint8
                              g : uint8
                              b : uint8
                        Comments:
                              uint8 r
                              uint8 g
                              uint8 b
                  Message Type: turtlesim/Pose
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                              linear_velocity : float32
                              angular_velocity : float32
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                              
                              float32 linear_velocity
                              float32 angular_velocit
                  Message Type: geometry_msgs/Twist
                        Fields:
                              linear : geometry_msgs/Vector3
                              angular : geometry_msgs/Vector3
                        Comments:
                              # This expresses velocity in free space broken into its linear and angular parts.
                              Vector3  linear
                              Vector3  angular
                  Message Type: std_srvs/EmptyRequest
                        Fields:
                        Comments:
                  Message Type: std_srvs/EmptyResponse
                        Fields:
                        Comments:
                  Message Type: turtlesim/KillRequest
                        Fields:
                              name : string
                        Comments:
                              string name
                  Message Type: turtlesim/KillResponse
                        Fields:
                        Comments:
                  Message Type: turtlesim/SpawnRequest
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                              name : string
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                              string name # Optional.  A unique name will be created and returned if this is empty
                  Message Type: turtlesim/SpawnResponse
                        Fields:
                              name : string
                        Comments:
                              string name
                  Message Type: turtlesim/SetPenRequest
                        Fields:
                              r : uint8
                              g : uint8
                              b : uint8
                              width : uint8
                              off : uint8
                        Comments:
                              uint8 r
                              uint8 g
                              uint8 b
                              uint8 width
                              uint8 off
                  Message Type: turtlesim/SetPenResponse
                        Fields:
                        Comments:
                  Message Type: turtlesim/TeleportAbsoluteRequest
                        Fields:
                              x : float32
                              y : float32
                              theta : float32
                        Comments:
                              float32 x
                              float32 y
                              float32 theta
                  Message Type: turtlesim/TeleportAbsoluteResponse
                        Fields:
                        Comments:
                  Message Type: turtlesim/TeleportRelativeRequest
                        Fields:
                              linear : float32
                              angular : float32
                        Comments:
                              float32 linear
                              float32 angular
                  Message Type: turtlesim/TeleportRelativeResponse
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
      Node: turtle_teleop_key
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: cmd_vel
                        Message Type: geometry_msgs/Twist
            Subscriptions:
            Services Provided:
                  Service: /teleop_turtle/get_loggers
                        Message: /teleop_turtle/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /teleop_turtle/get_loggers
                        Message: /teleop_turtle/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /teleop_turtle/set_logger_level
                        Message: /teleop_turtle/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /teleop_turtle/set_logger_level
                        Message: /teleop_turtle/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: geometry_msgs/Twist
                        Fields:
                              linear : geometry_msgs/Vector3
                              angular : geometry_msgs/Vector3
                        Comments:
                              # This expresses velocity in free space broken into its linear and angular parts.
                              Vector3  linear
                              Vector3  angular
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
urdf
urdf_parser_plugin
urdf_sim_tutorial
urdf_tutorial
vision_opencv
visualization_marker_tutorials
      Node: points_and_lines
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: visualization_marker
                        Message Type: visualization_msgs/Marker
            Subscriptions:
            Services Provided:
                  Service: /points_and_lines/get_loggers
                        Message: /points_and_lines/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /points_and_lines/get_loggers
                        Message: /points_and_lines/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /points_and_lines/set_logger_level
                        Message: /points_and_lines/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /points_and_lines/set_logger_level
                        Message: /points_and_lines/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
      Node: basic_shapes
            Publications:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
                  Topic: visualization_marker
                        Message Type: visualization_msgs/Marker
            Subscriptions:
            Services Provided:
                  Service: /basic_shapes/get_loggers
                        Message: /basic_shapes/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /basic_shapes/get_loggers
                        Message: /basic_shapes/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /basic_shapes/set_logger_level
                        Message: /basic_shapes/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /basic_shapes/set_logger_level
                        Message: /basic_shapes/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: visualization_msgs/Marker
                        Fields:
                              ARROW=0 : uint8
                              CUBE=1 : uint8
                              SPHERE=2 : uint8
                              CYLINDER=3 : uint8
                              LINE_STRIP=4 : uint8
                              LINE_LIST=5 : uint8
                              CUBE_LIST=6 : uint8
                              SPHERE_LIST=7 : uint8
                              POINTS=8 : uint8
                              TEXT_VIEW_FACING=9 : uint8
                              MESH_RESOURCE=10 : uint8
                              TRIANGLE_LIST=11 : uint8
                              ADD=0 : uint8
                              MODIFY=0 : uint8
                              DELETE=2 : uint8
                              DELETEALL=3 : uint8
                              header : std_msgs/Header
                              ns : string
                              id : int32
                              type : int32
                              action : int32
                              pose : geometry_msgs/Pose
                              scale : geometry_msgs/Vector3
                              color : std_msgs/ColorRGBA
                              lifetime : duration
                              frame_locked : bool
                              points : geometry_msgs/Point[]
                              colors : std_msgs/ColorRGBA[]
                              text : string
                              mesh_resource : string
                              mesh_use_embedded_materials : bool
                        Comments:
                              # See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz
                              
                              uint8 ARROW=0
                              uint8 CUBE=1
                              uint8 SPHERE=2
                              uint8 CYLINDER=3
                              uint8 LINE_STRIP=4
                              uint8 LINE_LIST=5
                              uint8 CUBE_LIST=6
                              uint8 SPHERE_LIST=7
                              uint8 POINTS=8
                              uint8 TEXT_VIEW_FACING=9
                              uint8 MESH_RESOURCE=10
                              uint8 TRIANGLE_LIST=11
                              
                              uint8 ADD=0
                              uint8 MODIFY=0
                              uint8 DELETE=2
                              uint8 DELETEALL=3
                              
                              Header header                        # header for time/frame information
                              string ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object
                              int32 id 		                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later
                              int32 type 		                       # Type of object
                              int32 action 	                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects
                              geometry_msgs/Pose pose                 # Pose of the object
                              geometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)
                              std_msgs/ColorRGBA color             # Color [0.0-1.0]
                              duration lifetime                    # How long the object should last before being automatically deleted.  0 means forever
                              bool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep
                              
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              geometry_msgs/Point[] points
                              #Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)
                              #number of colors must either be 0 or equal to the number of points
                              #NOTE: alpha is not yet used
                              std_msgs/ColorRGBA[] colors
                              
                              # NOTE: only used for text markers
                              string text
                              
                              # NOTE: only used for MESH_RESOURCE markers
                              string mesh_resource
                              bool mesh_use_embedded_materials
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: geometry_msgs/Pose
                        Fields:
                              position : geometry_msgs/Point
                              orientation : geometry_msgs/Quaternion
                        Comments:
                              # A representation of pose in free space, composed of position and orientation. 
                              Point position
                              Quaternion orientation
                  Message Type: geometry_msgs/Vector3
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This represents a vector in free space. 
                              # It is only meant to represent a direction. Therefore, it does not
                              # make sense to apply a translation to it (e.g., when applying a 
                              # generic rigid transformation to a Vector3, tf2 will only apply the
                              # rotation). If you want your data to be translatable too, use the
                              # geometry_msgs/Point message instead.
                              
                              float64 x
                              float64 y
                              float64 
                  Message Type: std_msgs/ColorRGBA
                        Fields:
                              r : float32
                              g : float32
                              b : float32
                              a : float32
                        Comments:
                              float32 r
                              float32 g
                              float32 b
                              float32 a
                  Message Type: geometry_msgs/Point
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                        Comments:
                              # This contains the position of a point in free space
                              float64 x
                              float64 y
                              float64 z
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
                  Message Type: geometry_msgs/Quaternion
                        Fields:
                              x : float64
                              y : float64
                              z : float64
                              w : float64
                        Comments:
                              # This represents an orientation in free space in quaternion form.
                              
                              float64 x
                              float64 y
                              float64 z
                              float64 w
visualization_msgs
visualization_tutorials
viz
webkit_dependency
xacro
      Node: xacro
            Publications:
                  Topic: rosout_agg
                        Message Type: rosgraph_msgs/Log
            Subscriptions:
                  Topic: rosout
                        Message Type: rosgraph_msgs/Log
            Services Provided:
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersRequest
                              Request Message Type: roscpp/GetLoggersRequest
                  Service: /rosout/get_loggers
                        Message: /rosout/get_loggersResponse
                              Response Message Type: roscpp/GetLoggersResponse
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelRequest
                              Request Message Type: roscpp/SetLoggerLevelRequest
                  Service: /rosout/set_logger_level
                        Message: /rosout/set_logger_levelResponse
                              Response Message Type: roscpp/SetLoggerLevelResponse
            Message Types:
                  Message Type: rosgraph_msgs/Log
                        Fields:
                              DEBUG=1 : byte
                              INFO=2 : byte
                              WARN=4 : byte
                              ERROR=8 : byte
                              FATAL=16 : byte
                              header : std_msgs/Header
                              level : byte
                              name : string
                              msg : string
                              file : string
                              function : string
                              line : uint32
                              topics : string[]
                        Comments:
                              ##
                              ## Severity level constants
                              ##
                              byte DEBUG=1 #debug level
                              byte INFO=2  #general level
                              byte WARN=4  #warning level
                              byte ERROR=8 #error level
                              byte FATAL=16 #fatal/critical level
                              ##
                              ## Fields
                              ##
                              Header header
                              byte level
                              string name # name of the node
                              string msg # message 
                              string file # file the message came from
                              string function # function the message came from
                              uint32 line # line the message came from
                              string[] topics # topic names that the node publishes
                  Message Type: roscpp/GetLoggersRequest
                        Fields:
                        Comments:
                  Message Type: roscpp/GetLoggersResponse
                        Fields:
                              loggers : roscpp/Logger[]
                        Comments:
                              Logger[] loggers
                  Message Type: roscpp/SetLoggerLevelRequest
                        Fields:
                              logger : string
                              level : string
                        Comments:
                              string logger
                              string level
                  Message Type: roscpp/SetLoggerLevelResponse
                        Fields:
                        Comments:
                  Message Type: std_msgs/Header
                        Fields:
                              seq : uint32
                              stamp : time
                              frame_id : string
                        Comments:
                              # Standard metadata for higher-level stamped data types.
                              # This is generally used to communicate timestamped data 
                              # in a particular coordinate frame.
                              # 
                              # sequence ID: consecutively increasing ID 
                              uint32 seq
                              #Two-integer timestamp that is expressed as:
                              # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
                              # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
                              # time-handling sugar is provided by the client library
                              time stamp
                              #Frame this data is associated with
                              string frame_id
                  Message Type: roscpp/Logger
                        Fields:
                              name : string
                              level : string
                        Comments:
                              string name
                              string level
xmlrpcpp